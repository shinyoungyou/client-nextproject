{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport instance from '.';\nimport userSlice from \"../reducers/user\";\nexport const loadPosts = createAsyncThunk('post/loadPosts', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.post('post/', payload);\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n});\n\nexport const addPost = createAsyncThunk('post/addPost', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.post('post/', payload);\n    thunkAPI.dispatch(userSlice.actions.addPostToMe(response.data.id));\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n});\n\nexport const removePost = createAsyncThunk('post/removePost', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.delete(`post/${payload.id}`);\n    thunkAPI.dispatch(userSlice.actions.removePostToMe(response.data.id));\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n});\n\nexport const addComment = createAsyncThunk('post/addComment', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.post(`post/${payload.postId}/comment/`, payload);\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n});\n\nexport const removeComment = createAsyncThunk('post/removeComment', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.delete(`post/${payload.postId}/comment/${payload.id}`);\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n});\n\nexport const likePost = createAsyncThunk('post/likePost', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.post(`post/${payload.postId}/like`, payload);\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n});\n\nexport const unlikePost = createAsyncThunk('post/unlikePost', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.delete(`post/${payload.postId}/like/${payload.id}`);\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n});","map":{"version":3,"names":["createAsyncThunk","instance","userSlice","loadPosts","payload","thunkAPI","response","post","fulfillWithValue","data","error","rejectWithValue","addPost","dispatch","actions","addPostToMe","id","removePost","delete","removePostToMe","addComment","postId","removeComment","likePost","unlikePost"],"sources":["/Users/home/Desktop/new-projects/client-nextproject/store/thunks/post.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport instance from '.';\nimport userSlice from \"../reducers/user\";\n\nexport const loadPosts = createAsyncThunk('post/loadPosts', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.post('post/', payload);\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const addPost = createAsyncThunk('post/addPost', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.post('post/', payload);\n    thunkAPI.dispatch(userSlice.actions.addPostToMe(response.data.id));\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const removePost = createAsyncThunk('post/removePost', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.delete(`post/${payload.id}`);\n    thunkAPI.dispatch(userSlice.actions.removePostToMe(response.data.id));\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const addComment = createAsyncThunk('post/addComment', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.post(`post/${payload.postId}/comment/`, payload);\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const removeComment = createAsyncThunk('post/removeComment', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.delete(`post/${payload.postId}/comment/${payload.id}`);\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const likePost = createAsyncThunk('post/likePost', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.post(`post/${payload.postId}/like`, payload);\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const unlikePost = createAsyncThunk('post/unlikePost', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.delete(`post/${payload.postId}/like/${payload.id}`);\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}