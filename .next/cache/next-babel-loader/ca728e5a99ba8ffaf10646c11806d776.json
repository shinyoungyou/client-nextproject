{"ast":null,"code":"var __jsx = React.createElement;\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport { loadPostsByUser } from \"../../store/thunks/post\";\nimport React, { useState, useEffect } from \"react\";\nimport Head from 'next/head';\nimport AppLayout from \"../../components/AppLayout\";\nimport PostCard from \"../../components/PostCard\";\nimport UserProfile from \"../../components/UserProfile\";\nvar Post = function Post() {\n  var _useSelector = useSelector(function (state) {\n      return state.user;\n    }),\n    singleUser = _useSelector.singleUser,\n    my = _useSelector.my;\n  var _useSelector2 = useSelector(function (state) {\n      return state.post;\n    }),\n    postsByUser = _useSelector2.postsByUser,\n    loadPostsByUserLoading = _useSelector2.loadPostsByUserLoading,\n    bringMorePostsByUser = _useSelector2.bringMorePostsByUser;\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var id = router.query.id;\n  var _useState = useState(-1),\n    prevLastId = _useState[0],\n    setPrevLastId = _useState[1];\n  useEffect(function () {\n    var handleScroll = function handleScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (!loadPostsByUserLoading && bringMorePostsByUser) {\n          var _postsByUser;\n          if (id != null && postsByUser != null && prevLastId != ((_postsByUser = postsByUser[postsByUser.length - 1]) === null || _postsByUser === void 0 ? void 0 : _postsByUser.id)) {\n            var _postsByUser2;\n            dispatch(loadPostsByUser({\n              id: parseInt(id),\n              lastId: postsByUser[postsByUser.length - 1].id\n            }));\n            setPrevLastId((_postsByUser2 = postsByUser[postsByUser.length - 1]) === null || _postsByUser2 === void 0 ? void 0 : _postsByUser2.id);\n          }\n        }\n      }\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    return function () {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [loadPostsByUserLoading, bringMorePostsByUser]);\n  return __jsx(AppLayout, null, singleUser && __jsx(Head, null, __jsx(\"title\", null, singleUser.username, \"\\uB2D8\\uC758 \\uAE00\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"\".concat(singleUser.username, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: \"\".concat(singleUser.username, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: \"\".concat(singleUser.username, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: \"https://nodebird.com/favicon.ico\"\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: \"https://nodebird.com/user/\".concat(id)\n  })), singleUser && singleUser.id != (my === null || my === void 0 ? void 0 : my.id) ? __jsx(UserProfile, {\n    user: singleUser,\n    maxWidth: 660\n  }) : null, postsByUser === null || postsByUser === void 0 ? void 0 : postsByUser.map(function (post) {\n    return post.Retweet ? __jsx(PostCard, {\n      post: post.Retweet,\n      posts: postsByUser,\n      retweetingPostId: post.id,\n      key: post.id\n    }) : __jsx(PostCard, {\n      post: post,\n      posts: postsByUser,\n      retweetingPostId: null,\n      key: post.id\n    });\n  }));\n};\nexport var __N_SSP = true;\nexport default Post;","map":null,"metadata":{},"sourceType":"module"}