{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reducer from '../reducers';\nvar configureStore = function configureStore() {\n  var enahncer = process.env.NODE_DEV === 'production' ? compose(applyMiddleware([])) : composeWithDevTools(applyMiddleware([]));\n  var store = createStore(reducer, enhancer);\n  return store;\n};\nvar wrapper = createWrapper(configureStore, {\n  debug: true // 개발모드일떄 디버그 하기 쉬움\n});\n\nexport default wrapper;","map":{"version":3,"names":["createWrapper","createStore","applyMiddleware","compose","composeWithDevTools","reducer","configureStore","enahncer","process","env","NODE_DEV","store","enhancer","wrapper","debug"],"sources":["/Users/home/Desktop/new-projects/client-nextproject/store/configureStore.js"],"sourcesContent":["import { createWrapper } from 'next-redux-wrapper';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport reducer from '../reducers';\nconst configureStore = () => {\n  const enahncer = process.env.NODE_DEV === 'production' ? compose(applyMiddleware([])) : composeWithDevTools(applyMiddleware([]));\n  const store = createStore(reducer, enhancer);\n  return store;\n}\n\nconst wrapper = createWrapper(configureStore, {\n  debug: process.env.NODE_ENV === 'development' // 개발모드일떄 디버그 하기 쉬움\n});\n\nexport default wrapper;"],"mappings":"AAAA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,SAASC,WAAW,EAAEC,eAAe,EAAEC,OAAO,QAAQ,OAAO;AAC7D,SAASC,mBAAmB,QAAQ,0BAA0B;AAE9D,OAAOC,OAAO,MAAM,aAAa;AACjC,IAAMC,cAAc,GAAG,SAAjBA,cAAc,GAAS;EAC3B,IAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGP,OAAO,CAACD,eAAe,CAAC,EAAE,CAAC,CAAC,GAAGE,mBAAmB,CAACF,eAAe,CAAC,EAAE,CAAC,CAAC;EAChI,IAAMS,KAAK,GAAGV,WAAW,CAACI,OAAO,EAAEO,QAAQ,CAAC;EAC5C,OAAOD,KAAK;AACd,CAAC;AAED,IAAME,OAAO,GAAGb,aAAa,CAACM,cAAc,EAAE;EAC5CQ,KAAK,MAAwC,CAAC;AAChD,CAAC,CAAC;;AAEF,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}