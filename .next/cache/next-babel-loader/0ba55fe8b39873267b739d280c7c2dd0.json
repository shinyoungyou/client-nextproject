{"ast":null,"code":"import { all, fork, takeLatest, put, call } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE } from \"../reducers/user\";\nimport axios from 'axios';\nfunction logInAPI(data) {\n  axios.post('/user/login', data);\n}\nfunction* logIn(action) {\n  const result = yield call(logInAPI, action.data);\n  try {\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    put({\n      type: LOG_IN_FAILURE,\n      error: err.data\n    });\n  }\n}\nfunction logOutAPI(data) {\n  axios.post('/user/login', data);\n}\nfunction* logOut(action) {\n  const result = yield call(logOutAPI, action.data);\n  try {\n    yield put({\n      type: LOG_OUT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    put({\n      type: LOG_OUT_FAILURE,\n      error: err.data\n    });\n  }\n}\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"names":["all","fork","takeLatest","put","call","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","axios","logInAPI","data","post","logIn","action","result","type","err","error","logOutAPI","logOut","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","watchLogIn","watchLogOut","LOG_OUT_REQUEST","userSaga"],"sources":["/Users/home/Desktop/new-projects/client-nextproject/sagas/user.js"],"sourcesContent":["import { all, fork, takeLatest, put, call } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE } from \"../reducers/user\";\nimport axios from 'axios';\n\nfunction logInAPI(data) {\n  axios.post('/user/login', data)\n\n\n}\nfunction* logIn(action) {\n  const result = yield call(logInAPI, action.data);\n  try{\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    })\n  } catch (err) {\n    put({\n      type: LOG_IN_FAILURE,\n      error: err.data\n    })\n  }\n}\n\nfunction logOutAPI(data) {\n  axios.post('/user/login', data)\n\n}\nfunction* logOut(action) {\n  const result = yield call(logOutAPI, action.data);\n  try{\n    yield put({\n      type: LOG_OUT_SUCCESS,\n      data: result.data\n    })\n  } catch (err) {\n    put({\n      type: LOG_OUT_FAILURE,\n      error: err.data\n    })\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchLogIn),\n    fork(watchLogOut),\n  ])\n}"],"mappings":"AAAA,SAASA,GAAG,EAAEC,IAAI,EAAEC,UAAU,EAAEC,GAAG,EAAEC,IAAI,QAAQ,oBAAoB;AACrE,SAASC,cAAc,EAAEC,cAAc,EAAEC,cAAc,QAAQ,kBAAkB;AACjF,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,QAAQ,CAACC,IAAI,EAAE;EACtBF,KAAK,CAACG,IAAI,CAAC,aAAa,EAAED,IAAI,CAAC;AAGjC;AACA,UAAUE,KAAK,CAACC,MAAM,EAAE;EACtB,MAAMC,MAAM,GAAG,MAAMV,IAAI,CAACK,QAAQ,EAAEI,MAAM,CAACH,IAAI,CAAC;EAChD,IAAG;IACD,MAAMP,GAAG,CAAC;MACRY,IAAI,EAAET,cAAc;MACpBI,IAAI,EAAEI,MAAM,CAACJ;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZb,GAAG,CAAC;MACFY,IAAI,EAAER,cAAc;MACpBU,KAAK,EAAED,GAAG,CAACN;IACb,CAAC,CAAC;EACJ;AACF;AAEA,SAASQ,SAAS,CAACR,IAAI,EAAE;EACvBF,KAAK,CAACG,IAAI,CAAC,aAAa,EAAED,IAAI,CAAC;AAEjC;AACA,UAAUS,MAAM,CAACN,MAAM,EAAE;EACvB,MAAMC,MAAM,GAAG,MAAMV,IAAI,CAACc,SAAS,EAAEL,MAAM,CAACH,IAAI,CAAC;EACjD,IAAG;IACD,MAAMP,GAAG,CAAC;MACRY,IAAI,EAAEK,eAAe;MACrBV,IAAI,EAAEI,MAAM,CAACJ;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZb,GAAG,CAAC;MACFY,IAAI,EAAEM,eAAe;MACrBJ,KAAK,EAAED,GAAG,CAACN;IACb,CAAC,CAAC;EACJ;AACF;AAEA,UAAUY,UAAU,GAAG;EACrB,MAAMpB,UAAU,CAACG,cAAc,EAAEO,KAAK,CAAC;AACzC;AAEA,UAAUW,WAAW,GAAG;EACtB,MAAMrB,UAAU,CAACsB,eAAe,EAAEL,MAAM,CAAC;AAC3C;AAEA,eAAe,UAAUM,QAAQ,GAAG;EAClC,MAAMzB,GAAG,CAAC,CACRC,IAAI,CAACqB,UAAU,CAAC,EAChBrB,IAAI,CAACsB,WAAW,CAAC,CAClB,CAAC;AACJ"},"metadata":{},"sourceType":"module"}