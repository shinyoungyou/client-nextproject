{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport instance from '.';\nimport { addPostToMe, removePostToMe } from \"../reducers/user\";\nimport { getDummyPosts, postMyDummyPost, postMyDummyComment } from '../reducers/post';\nimport shortId from 'shortid';\nconst pause = duration => {\n  return new Promise(resolve => {\n    setTimeout(resolve, duration);\n  });\n};\nexport const loadPosts = createAsyncThunk('post/loadPosts', async (payload, thunkAPI) => {\n  try {\n    // const response = await instance.post('posts/', payload);\n    await pause(1000);\n    // return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n    // return thunkAPI.fulfillWithValue(getDummyPosts(10)); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n});\n\nexport const addPost = createAsyncThunk('post/addPost', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.post('post/', payload);\n    // await pause(1000);\n    // const id = shortId.generate();\n    thunkAPI.dispatch(addPostToMe(response.data.id));\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n    // return thunkAPI.fulfillWithValue(postMyDummyPost(payload, id)); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n});\n\nexport const removePost = createAsyncThunk('post/removePost', async (payload, thunkAPI) => {\n  try {\n    // const response = await instance.delete(`post/${payload.id}`);\n    await pause(1000);\n    thunkAPI.dispatch(removePostToMe(payload));\n    // return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n    return thunkAPI.fulfillWithValue(payload); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n});\n\nexport const addComment = createAsyncThunk('post/addComment', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.post(`post/${payload.postId}/comment/`, payload);\n    // await pause(1000);\n    // const id = shortId.generate();\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n    // return thunkAPI.fulfillWithValue(postMyDummyComment(payload, id)); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n});\n\nexport const removeComment = createAsyncThunk('post/removeComment', async (payload, thunkAPI) => {\n  try {\n    // const response = await instance.delete(`post/${payload.postId}/comment/${payload.id}`);\n    await pause(1000);\n    return thunkAPI.fulfillWithValue(payload); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n});\n\nexport const likePost = createAsyncThunk('post/likePost', async (payload, thunkAPI) => {\n  try {\n    // const response = await instance.post(`post/${payload.postId}/like`, payload);\n    await pause(1000);\n    return thunkAPI.fulfillWithValue(payload); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n});\n\nexport const unlikePost = createAsyncThunk('post/unlikePost', async (payload, thunkAPI) => {\n  try {\n    // const response = await instance.delete(`post/${payload.postId}/like/${payload.id}`);\n    await pause(1000);\n    return thunkAPI.fulfillWithValue(payload); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n});","map":{"version":3,"names":["createAsyncThunk","instance","addPostToMe","removePostToMe","getDummyPosts","postMyDummyPost","postMyDummyComment","shortId","pause","duration","Promise","resolve","setTimeout","loadPosts","payload","thunkAPI","error","rejectWithValue","response","data","addPost","post","dispatch","id","fulfillWithValue","removePost","addComment","postId","removeComment","likePost","unlikePost"],"sources":["/Users/home/Desktop/new-projects/client-nextproject/store/thunks/post.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport instance from '.';\nimport { addPostToMe, removePostToMe } from \"../reducers/user\";\nimport { getDummyPosts, postMyDummyPost, postMyDummyComment } from '../reducers/post';\n\nimport shortId from 'shortid';\n\nconst pause = (duration) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, duration);\n  });\n};\n\nexport const loadPosts = createAsyncThunk('post/loadPosts', async (payload, thunkAPI) => {\n  try {\n    // const response = await instance.post('posts/', payload);\n    await pause(1000);\n    // return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n    // return thunkAPI.fulfillWithValue(getDummyPosts(10)); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const addPost = createAsyncThunk('post/addPost', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.post('post/', payload);\n    // await pause(1000);\n    // const id = shortId.generate();\n    thunkAPI.dispatch(addPostToMe(response.data.id));\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n    // return thunkAPI.fulfillWithValue(postMyDummyPost(payload, id)); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const removePost = createAsyncThunk('post/removePost', async (payload, thunkAPI) => {\n  try {\n    // const response = await instance.delete(`post/${payload.id}`);\n    await pause(1000);\n    thunkAPI.dispatch(removePostToMe(payload));\n    // return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n    return thunkAPI.fulfillWithValue(payload); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const addComment = createAsyncThunk('post/addComment', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.post(`post/${payload.postId}/comment/`, payload);\n    // await pause(1000);\n    // const id = shortId.generate();\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n    // return thunkAPI.fulfillWithValue(postMyDummyComment(payload, id)); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const removeComment = createAsyncThunk('post/removeComment', async (payload, thunkAPI) => {\n  try {\n    // const response = await instance.delete(`post/${payload.postId}/comment/${payload.id}`);\n    await pause(1000);\n    return thunkAPI.fulfillWithValue(payload); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const likePost = createAsyncThunk('post/likePost', async (payload, thunkAPI) => {\n  try {\n    // const response = await instance.post(`post/${payload.postId}/like`, payload);\n    await pause(1000);\n    return thunkAPI.fulfillWithValue(payload); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const unlikePost = createAsyncThunk('post/unlikePost', async (payload, thunkAPI) => {\n  try {\n    // const response = await instance.delete(`post/${payload.postId}/like/${payload.id}`);\n    await pause(1000);\n    return thunkAPI.fulfillWithValue(payload); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}