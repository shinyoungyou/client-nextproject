{"ast":null,"code":"import { all, fork, takeLatest, call, put, delay } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, dummyPost, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from \"../reducers/post\";\nimport axios from 'axios';\nfunction addPostAPI(data) {\n  return axios.post(`/api/post/${data.id}`, data);\n}\nfunction* addPost(action) {\n  // const result = yield call(addPostAPI, action.data);\n  yield delay(1000);\n  try {\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: dummyPost\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment/`, data);\n}\nfunction* addComment(action) {\n  // const result = yield call(addCommentAPI, action.data);\n  yield delay(1000);\n  try {\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\nexport default function* userSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"names":["all","fork","takeLatest","call","put","delay","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","dummyPost","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","axios","addPostAPI","data","post","id","addPost","action","type","err","console","error","response","addCommentAPI","postId","addComment","result","watchAddPost","watchAddComment","userSaga"],"sources":["/Users/home/Desktop/new-projects/client-nextproject/sagas/post.js"],"sourcesContent":["import { all, fork, takeLatest, call, put, delay } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, dummyPost,\n  ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from \"../reducers/post\";\nimport axios from 'axios';\n\nfunction addPostAPI(data) {\n  return axios.post(`/api/post/${data.id}`, data);\n}\n\nfunction* addPost(action) {\n  // const result = yield call(addPostAPI, action.data);\n  yield delay(1000);\n  try{\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: dummyPost\n    })\n  }\n  catch(err) {\n    console.error(err);\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data,\n    })\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment/`, data);\n}\n\nfunction* addComment(action) {\n  // const result = yield call(addCommentAPI, action.data);\n  yield delay(1000);\n  try{\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data,\n    })\n  }\n  catch(err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data,\n    })\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost)\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment)\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchAddPost),\n    fork(watchAddComment),\n  ])\n}"],"mappings":"AAAA,SAASA,GAAG,EAAEC,IAAI,EAAEC,UAAU,EAAEC,IAAI,EAAEC,GAAG,EAAEC,KAAK,QAAQ,oBAAoB;AAC5E,SAASC,gBAAgB,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAEC,SAAS,EACtEC,mBAAmB,EAAEC,mBAAmB,EAAEC,mBAAmB,QAAQ,kBAAkB;AACzF,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,UAAU,CAACC,IAAI,EAAE;EACxB,OAAOF,KAAK,CAACG,IAAI,CAAE,aAAYD,IAAI,CAACE,EAAG,EAAC,EAAEF,IAAI,CAAC;AACjD;AAEA,UAAUG,OAAO,CAACC,MAAM,EAAE;EACxB;EACA,MAAMd,KAAK,CAAC,IAAI,CAAC;EACjB,IAAG;IACD,MAAMD,GAAG,CAAC;MACRgB,IAAI,EAAEb,gBAAgB;MACtBQ,IAAI,EAAEN;IACR,CAAC,CAAC;EACJ,CAAC,CACD,OAAMY,GAAG,EAAE;IACTC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAClB,MAAMjB,GAAG,CAAC;MACRgB,IAAI,EAAEZ,gBAAgB;MACtBe,KAAK,EAAEF,GAAG,CAACG,QAAQ,CAACT;IACtB,CAAC,CAAC;EACJ;AACF;AAEA,SAASU,aAAa,CAACV,IAAI,EAAE;EAC3B,OAAOF,KAAK,CAACG,IAAI,CAAE,aAAYD,IAAI,CAACW,MAAO,WAAU,EAAEX,IAAI,CAAC;AAC9D;AAEA,UAAUY,UAAU,CAACR,MAAM,EAAE;EAC3B;EACA,MAAMd,KAAK,CAAC,IAAI,CAAC;EACjB,IAAG;IACD,MAAMD,GAAG,CAAC;MACRgB,IAAI,EAAET,mBAAmB;MACzBI,IAAI,EAAEa,MAAM,CAACb;IACf,CAAC,CAAC;EACJ,CAAC,CACD,OAAMM,GAAG,EAAE;IACTC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAClB,MAAMjB,GAAG,CAAC;MACRgB,IAAI,EAAER,mBAAmB;MACzBW,KAAK,EAAEF,GAAG,CAACG,QAAQ,CAACT;IACtB,CAAC,CAAC;EACJ;AACF;AAEA,UAAUc,YAAY,GAAG;EACvB,MAAM3B,UAAU,CAACI,gBAAgB,EAAEY,OAAO,CAAC;AAC7C;AAEA,UAAUY,eAAe,GAAG;EAC1B,MAAM5B,UAAU,CAACQ,mBAAmB,EAAEiB,UAAU,CAAC;AACnD;AAEA,eAAe,UAAUI,QAAQ,GAAG;EAClC,MAAM/B,GAAG,CAAC,CACRC,IAAI,CAAC4B,YAAY,CAAC,EAClB5B,IAAI,CAAC6B,eAAe,CAAC,CACtB,CAAC;AACJ"},"metadata":{},"sourceType":"module"}