{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/new-projects/client-nextproject/pages/post/[id].tsx\";\nvar __jsx = React.createElement;\nimport { useSelector } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport wrapper from \"../../store\";\nimport { loadMyInfo } from \"../../store/thunks/user\";\nimport { loadSinglePost } from \"../../store/thunks/post\";\nimport axios from \"axios\";\nimport Head from 'next/head';\nimport AppLayout from \"../../components/AppLayout\";\nimport PostCard from \"../../components/PostCard\";\nimport React from \"react\";\nconst Post = () => {\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, singlePost && __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 24\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, singlePost.User.username, \"\\uB2D8\\uC758 \\uAE00\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: singlePost.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: `${singlePost.User.username}님의 게시글`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: singlePost.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebird.com/favicon.ico',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: `https://nodebird.com/post/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  })), singlePost && (singlePost.Retweet ? __jsx(PostCard, {\n    post: singlePost.Retweet,\n    retweetingPostId: singlePost.id,\n    key: singlePost.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 46\n    }\n  }) : __jsx(PostCard, {\n    post: singlePost,\n    retweetingPostId: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 140\n    }\n  })));\n};\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  var _context$params;\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n  if (cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  await context.store.dispatch(loadMyInfo());\n  await context.store.dispatch(loadSinglePost({\n    id: parseInt((_context$params = context.params) === null || _context$params === void 0 ? void 0 : _context$params.id)\n  }));\n  console.log(context.req);\n});\nexport default Post;","map":{"version":3,"names":["useSelector","useRouter","wrapper","loadMyInfo","loadSinglePost","axios","Head","AppLayout","PostCard","React","Post","singlePost","state","post","router","id","query","User","username","content","Images","src","Retweet","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","parseInt","params","console","log"],"sources":["/Users/home/Desktop/new-projects/client-nextproject/pages/post/[id].tsx"],"sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport wrapper from \"../../store\";\nimport { loadMyInfo } from \"../../store/thunks/user\";\nimport { loadSinglePost } from \"../../store/thunks/post\";\nimport type { NextPage } from 'next';\nimport RootState from \"../../store/state-types\";\nimport axios from \"axios\";\nimport Head from 'next/head';\n\nimport AppLayout from \"../../components/AppLayout\";\nimport PostCard from \"../../components/PostCard\";\nimport React from \"react\";\nconst Post: NextPage = () => {\n  const { singlePost } = useSelector((state: RootState)=>state.post);\n  const router = useRouter();\n  const { id } = router.query;\n\n  return (\n      <AppLayout>\n        {singlePost && <Head>\n          <title>\n            {singlePost.User.username}\n            님의 글\n          </title>\n          <meta name=\"description\" content={singlePost.content}/>\n          <meta property=\"og:title\" content={`${singlePost.User.username}님의 게시글`}/>\n          <meta property=\"og:description\" content={singlePost.content}/>\n          <meta property=\"og:image\"\n                content={singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebird.com/favicon.ico'}/>\n          <meta property=\"og:url\" content={`https://nodebird.com/post/${id}`}/>\n        </Head>}\n        {singlePost && (singlePost.Retweet ? <PostCard post={singlePost.Retweet} retweetingPostId={singlePost.id} key={singlePost.id} /> : <PostCard post={singlePost} retweetingPostId={null} />)}\n      </AppLayout>\n  )\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context)=>{\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n  if (cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  await context.store.dispatch(loadMyInfo());\n  await context.store.dispatch(loadSinglePost({ id: parseInt(context.params?.id as string) }));\n\n  console.log(context.req);\n})\n\nexport default Post;"],"mappings":";;AAAA,SAASA,WAAW,QAAqB,aAAa;AACtD,SAASC,SAAS,QAAQ,aAAa;AACvC,OAAOC,OAAO,MAAM,aAAa;AACjC,SAASC,UAAU,QAAQ,yBAAyB;AACpD,SAASC,cAAc,QAAQ,yBAAyB;AAGxD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,WAAW;AAE5B,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,MAAMC,IAAc,GAAG,MAAM;EAC3B,MAAM;IAAEC;EAAW,CAAC,GAAGX,WAAW,CAAEY,KAAgB,IAAGA,KAAK,CAACC,IAAI,CAAC;EAClE,MAAMC,MAAM,GAAGb,SAAS,EAAE;EAC1B,MAAM;IAAEc;EAAG,CAAC,GAAGD,MAAM,CAACE,KAAK;EAE3B,OACI,MAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACPL,UAAU,IAAI,MAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAClB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGA,UAAU,CAACM,IAAI,CAACC,QAAQ,wBAEnB,EACR;IAAM,IAAI,EAAC,aAAa;IAAC,OAAO,EAAEP,UAAU,CAACQ,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,EACvD;IAAM,QAAQ,EAAC,UAAU;IAAC,OAAO,EAAG,GAAER,UAAU,CAACM,IAAI,CAACC,QAAS,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,EACzE;IAAM,QAAQ,EAAC,gBAAgB;IAAC,OAAO,EAAEP,UAAU,CAACQ,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,EAC9D;IAAM,QAAQ,EAAC,UAAU;IACnB,OAAO,EAAER,UAAU,CAACS,MAAM,CAAC,CAAC,CAAC,GAAGT,UAAU,CAACS,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG,GAAG,kCAAmC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,EACtG;IAAM,QAAQ,EAAC,QAAQ;IAAC,OAAO,EAAG,6BAA4BN,EAAG,EAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,CAChE,EACNJ,UAAU,KAAKA,UAAU,CAACW,OAAO,GAAG,MAAC,QAAQ;IAAC,IAAI,EAAEX,UAAU,CAACW,OAAQ;IAAC,gBAAgB,EAAEX,UAAU,CAACI,EAAG;IAAC,GAAG,EAAEJ,UAAU,CAACI,EAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,GAAG,MAAC,QAAQ;IAAC,IAAI,EAAEJ,UAAW;IAAC,gBAAgB,EAAE,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAAC,CAChL;AAElB,CAAC;AAED,OAAO,MAAMY,kBAAkB,GAAGrB,OAAO,CAACqB,kBAAkB,CAAC,MAAOC,OAAO,IAAG;EAAA;EAC5E,MAAMC,MAAM,GAAGD,OAAO,CAACE,GAAG,GAAGF,OAAO,CAACE,GAAG,CAACC,OAAO,CAACF,MAAM,GAAG,EAAE;EAC5DpB,KAAK,CAACuB,QAAQ,CAACD,OAAO,CAACE,MAAM,GAAG,EAAE;EAClC,IAAIJ,MAAM,EAAE;IACVpB,KAAK,CAACuB,QAAQ,CAACD,OAAO,CAACE,MAAM,GAAGJ,MAAM;EACxC;EACA,MAAMD,OAAO,CAACM,KAAK,CAACC,QAAQ,CAAC5B,UAAU,EAAE,CAAC;EAC1C,MAAMqB,OAAO,CAACM,KAAK,CAACC,QAAQ,CAAC3B,cAAc,CAAC;IAAEW,EAAE,EAAEiB,QAAQ,oBAACR,OAAO,CAACS,MAAM,oDAAd,gBAAgBlB,EAAE;EAAY,CAAC,CAAC,CAAC;EAE5FmB,OAAO,CAACC,GAAG,CAACX,OAAO,CAACE,GAAG,CAAC;AAC1B,CAAC,CAAC;AAEF,eAAehB,IAAI"},"metadata":{},"sourceType":"module"}