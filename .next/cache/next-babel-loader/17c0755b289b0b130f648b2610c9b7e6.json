{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logIn } from '../store/thunks/user';\nimport Link from 'next/link';\nimport { Box, IconButton, OutlinedInput, InputLabel, InputAdornment, FormControl, ButtonGroup, Button } from \"@mui/material\";\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport { LoadingButton } from '@mui/lab';\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\nvar LoginForm = function LoginForm() {\n  var _useSelector = useSelector(function (state) {\n      return state.user;\n    }),\n    logInLoading = _useSelector.logInLoading,\n    logInDone = _useSelector.logInDone,\n    logInError = _useSelector.logInError;\n  var dispatch = useDispatch();\n  var _useState = useState({\n      email: \"\",\n      pass: \"\"\n    }),\n    form = _useState[0],\n    setForm = _useState[1];\n  var email = form.email,\n    pass = form.pass;\n  var _useState2 = useState(false),\n    showPassword = _useState2[0],\n    setShowPassword = _useState2[1];\n  useEffect(function () {\n    if (logInDone) {\n      setForm({\n        email: \"\",\n        pass: \"\"\n      });\n    }\n  }, [logInDone]);\n  var handleClickShowPassword = function handleClickShowPassword() {\n    return setShowPassword(function (show) {\n      return !show;\n    });\n  };\n  var handleMouseDownPassword = function handleMouseDownPassword(event) {\n    event.preventDefault();\n  };\n  var handleChange = useCallback(function (e) {\n    var _e$target = e.target,\n      name = _e$target.name,\n      value = _e$target.value;\n    setForm(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, name, value));\n    });\n  }, [form]);\n  var handleSubmit = useCallback(function (e) {\n    e.preventDefault();\n    dispatch(logIn(form));\n  }, [form]);\n  return __jsx(Box, {\n    sx: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(FormControl, {\n    sx: {\n      m: 1,\n      width: \"100%\"\n    },\n    variant: \"outlined\",\n    style: {\n      marginBottom: \"4px\"\n    }\n  }, __jsx(InputLabel, {\n    htmlFor: \"Email\"\n  }, \"Email\"), __jsx(OutlinedInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    id: \"Email\",\n    label: \"Email\"\n  })), __jsx(FormControl, {\n    sx: {\n      m: 1,\n      width: \"100%\"\n    },\n    variant: \"outlined\",\n    style: {\n      marginTop: \"4px\"\n    }\n  }, __jsx(InputLabel, {\n    htmlFor: \"Password\"\n  }, \"Password\"), __jsx(OutlinedInput, {\n    type: showPassword ? \"text\" : \"password\",\n    name: \"pass\",\n    value: pass,\n    onChange: handleChange,\n    id: \"Password\",\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\"\n    }, __jsx(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: handleClickShowPassword,\n      onMouseDown: handleMouseDownPassword,\n      edge: \"end\"\n    }, showPassword ? __jsx(VisibilityOff, null) : __jsx(Visibility, null))),\n    label: \"Password\"\n  })), logInError && __jsx(Stack, {\n    sx: {\n      mx: 1,\n      width: '100%'\n    },\n    spacing: 2\n  }, __jsx(Alert, {\n    severity: \"error\"\n  }, logInError)), __jsx(ButtonGroup, {\n    \"aria-label\": \"outlined button group\",\n    style: {\n      width: '100%',\n      margin: '0 8px'\n    }\n  }, __jsx(LoadingButton, {\n    type: \"submit\",\n    variant: \"contained\",\n    loading: logInLoading\n  }, \"Login\"), __jsx(Button, {\n    variant: \"outlined\"\n  }, __jsx(Link, {\n    href: \"/signup\"\n  }, __jsx(\"a\", {\n    style: {\n      textDecoration: 'none',\n      color: '#1976d2'\n    }\n  }, \"Sign Up\"))))));\n};\nexport default LoginForm;","map":null,"metadata":{},"sourceType":"module"}