{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { HYDRATE } from 'next-redux-wrapper';\nimport { loadPosts, loadPostsByUser, loadSinglePost, addPost, editPost, removePost, addComment, editComment, removeComment, likePost, unlikePost, uploadImages, retweet, undoRetweet } from \"../thunks/post\";\nimport shortId from 'shortid';\nimport { faker } from '@faker-js/faker/locale/en_CA';\nvar postSlice = createSlice({\n  name: 'post',\n  initialState: {\n    bringMorePosts: true,\n    loadPostsLoading: false,\n    loadPostsDone: false,\n    loadPostsError: null,\n    bringMorePostsByUser: true,\n    loadPostsByUserLoading: false,\n    loadPostsByUserDone: false,\n    loadPostsByUserError: null,\n    loadSinglePostLoading: false,\n    loadSinglePostDone: false,\n    loadSinglePostError: null,\n    uploadImagesLoading: false,\n    uploadImagesDone: false,\n    uploadImagesError: null,\n    addPostLoading: false,\n    addPostDone: false,\n    addPostError: null,\n    editPostLoading: false,\n    editPostDone: false,\n    editPostError: null,\n    removePostLoading: false,\n    removePostDone: false,\n    removePostError: null,\n    addCommentLoading: false,\n    addCommentDone: false,\n    addCommentError: null,\n    editCommentLoading: false,\n    editCommentDone: false,\n    editCommentError: null,\n    removeCommentLoading: false,\n    removeCommentDone: false,\n    removeCommentError: null,\n    likePostLoading: false,\n    likePostDone: false,\n    likePostError: null,\n    unlikePostLoading: false,\n    unlikePostDone: false,\n    unlikePostError: null,\n    retweetLoading: false,\n    retweetDone: false,\n    retweetError: null,\n    mainPosts: [],\n    postsByUser: [],\n    singlePost: null,\n    imagePaths: []\n  },\n  extraReducers: function extraReducers(builder) {\n    // builder.addCase(HYDRATE, (state, action) => {\n    //   return {\n    //     ...state,\n    //     ...action.payload.post,\n    //   }\n    // })\n    builder.addCase(loadPosts.pending, function (state, action) {\n      state.loadPostsLoading = true;\n      state.loadPostsDone = false;\n      state.loadPostsError = null;\n    });\n    builder.addCase(loadPosts.fulfilled, function (state, action) {\n      state.mainPosts = state.mainPosts.concat(action.payload);\n      state.loadPostsLoading = false;\n      state.loadPostsDone = true;\n      state.bringMorePosts = action.payload.length == 10;\n    });\n    builder.addCase(loadPosts.rejected, function (state, action) {\n      state.loadPostsLoading = false;\n      state.loadPostsError = action.payload;\n    });\n    builder.addCase(loadPostsByUser.pending, function (state, action) {\n      state.loadPostsByUserLoading = true;\n      state.loadPostsByUserDone = false;\n      state.loadPostsByUserError = null;\n    });\n    builder.addCase(loadPostsByUser.fulfilled, function (state, action) {\n      state.postsByUser = state.postsByUser.concat(action.payload);\n      state.loadPostsByUserLoading = false;\n      state.loadPostsByUserDone = true;\n      state.bringMorePostsByUser = action.payload.length == 10;\n    });\n    builder.addCase(loadPostsByUser.rejected, function (state, action) {\n      state.loadPostsByUserLoading = false;\n      state.loadPostsByUserError = action.payload;\n    });\n    builder.addCase(loadSinglePost.pending, function (state, action) {\n      state.loadSinglePostLoading = true;\n      state.loadSinglePostDone = false;\n      state.loadSinglePostError = null;\n    });\n    builder.addCase(loadSinglePost.fulfilled, function (state, action) {\n      state.singlePost = action.payload;\n      state.loadSinglePostLoading = false;\n      state.loadSinglePostDone = true;\n    });\n    builder.addCase(loadSinglePost.rejected, function (state, action) {\n      state.loadSinglePostLoading = false;\n      state.loadSinglePostError = action.payload;\n    });\n    builder.addCase(uploadImages.pending, function (state, action) {\n      state.uploadImagesLoading = true;\n      state.uploadImagesDone = false;\n      state.uploadImagesError = null;\n    });\n    builder.addCase(uploadImages.fulfilled, function (state, action) {\n      state.imagePaths = action.payload;\n      state.uploadImagesLoading = false;\n      state.uploadImagesDone = true;\n    });\n    builder.addCase(uploadImages.rejected, function (state, action) {\n      state.uploadImagesLoading = false;\n      state.uploadImagesError = action.payload;\n    });\n    builder.addCase(addPost.pending, function (state, action) {\n      state.addPostLoading = true;\n      state.addPostDone = false;\n      state.addPostError = null;\n    });\n    builder.addCase(addPost.fulfilled, function (state, action) {\n      state.mainPosts.unshift(action.payload);\n      state.addPostLoading = false;\n      state.addPostDone = true;\n    });\n    builder.addCase(addPost.rejected, function (state, action) {\n      state.addPostLoading = false;\n      state.addPostError = action.payload;\n    });\n    builder.addCase(editPost.pending, function (state, action) {\n      state.editPostLoading = true;\n      state.editPostDone = false;\n      state.editPostError = null;\n    });\n    builder.addCase(editPost.fulfilled, function (state, action) {\n      var retweetingPost = state.mainPosts.find(function (post) {\n        return post.RetweetId === action.payload.id;\n      });\n      if (retweetingPost) {\n        retweetingPost.Retweet.content = action.payload.content;\n        retweetingPost.Retweet.updatedAt = action.payload.updatedAt;\n        state.editPostLoading = false;\n        state.editPostDone = true;\n      }\n      var post = state.mainPosts.find(function (post) {\n        return post.id === action.payload.id;\n      });\n      if (post) {\n        post.content = action.payload.content;\n        post.updatedAt = action.payload.updatedAt;\n        state.editPostLoading = false;\n        state.editPostDone = true;\n      }\n    });\n    builder.addCase(editPost.rejected, function (state, action) {\n      state.editPostLoading = false;\n      state.editPostError = action.payload;\n    });\n    builder.addCase(removePost.pending, function (state, action) {\n      state.removePostLoading = true;\n      state.removePostDone = false;\n      state.removePostError = null;\n    });\n    builder.addCase(removePost.fulfilled, function (state, action) {\n      var retweetingPost = state.mainPosts.find(function (post) {\n        return post.RetweetId == action.payload.id;\n      });\n      if (retweetingPost) {\n        state.mainPosts = state.mainPosts.filter(function (post) {\n          return post.id !== retweetingPost.id;\n        });\n        state.removePostLoading = false;\n        state.removePostDone = true;\n      } else {\n        state.mainPosts = state.mainPosts.filter(function (post) {\n          return post.id !== action.payload.id;\n        });\n        state.removePostLoading = false;\n        state.removePostDone = true;\n      }\n    });\n    builder.addCase(removePost.rejected, function (state, action) {\n      state.removePostLoading = false;\n      state.removePostError = action.payload;\n    });\n    builder.addCase(addComment.pending, function (state, action) {\n      state.addCommentLoading = true;\n      state.addCommentDone = false;\n      state.addCommentError = null;\n    });\n    builder.addCase(addComment.fulfilled, function (state, action) {\n      var retweetingPost = state.mainPosts.find(function (post) {\n        return post.RetweetId == action.payload.PostId;\n      });\n      if (retweetingPost) {\n        retweetingPost.Retweet.Comments.unshift(action.payload);\n        state.addCommentLoading = false;\n        state.addCommentDone = true;\n      }\n      var post = state.mainPosts.find(function (post) {\n        return post.id == action.payload.PostId;\n      });\n      if (post) {\n        post.Comments.unshift(action.payload);\n        state.addCommentLoading = false;\n        state.addCommentDone = true;\n      }\n    });\n    builder.addCase(addComment.rejected, function (state, action) {\n      state.addCommentLoading = false;\n      state.addCommentError = action.payload;\n    });\n    builder.addCase(editComment.pending, function (state, action) {\n      state.editCommentLoading = true;\n      state.editCommentDone = false;\n      state.editCommentError = null;\n    });\n    builder.addCase(editComment.fulfilled, function (state, action) {\n      var retweetingPost = state.mainPosts.find(function (post) {\n        return post.RetweetId == action.payload.PostId;\n      });\n      if (retweetingPost) {\n        var comment = retweetingPost.Retweet.Comments.find(function (comment) {\n          return comment.id == action.payload.id;\n        });\n        if (comment) {\n          comment.content = action.payload.content;\n          comment.updatedAt = action.payload.updatedAt;\n          state.editCommentLoading = false;\n          state.editCommentDone = true;\n        }\n      }\n      var post = state.mainPosts.find(function (post) {\n        return post.id == action.payload.PostId;\n      });\n      if (post) {\n        var _comment = post.Comments.find(function (comment) {\n          return comment.id == action.payload.id;\n        });\n        if (_comment) {\n          _comment.content = action.payload.content;\n          _comment.updatedAt = action.payload.updatedAt;\n          state.editCommentLoading = false;\n          state.editCommentDone = true;\n        }\n      }\n    });\n    builder.addCase(editComment.rejected, function (state, action) {\n      state.editCommentLoading = false;\n      state.editCommentError = action.payload;\n    });\n    builder.addCase(removeComment.pending, function (state, action) {\n      state.removeCommentLoading = true;\n      state.removeCommentDone = false;\n      state.removeCommentError = null;\n    });\n    builder.addCase(removeComment.fulfilled, function (state, action) {\n      var retweetingPost = state.mainPosts.find(function (post) {\n        return post.RetweetId === action.payload.PostId;\n      });\n      if (retweetingPost) {\n        retweetingPost.Retweet.Comments = retweetingPost.Retweet.Comments.filter(function (comment) {\n          return comment.id !== action.payload.id;\n        });\n        state.removeCommentLoading = false;\n        state.removeCommentDone = true;\n      }\n      var post = state.mainPosts.find(function (post) {\n        return post.id === action.payload.PostId;\n      });\n      if (post) {\n        post.Comments = post.Comments.filter(function (comment) {\n          return comment.id !== action.payload.id;\n        });\n        state.removeCommentLoading = false;\n        state.removeCommentDone = true;\n      }\n    });\n    builder.addCase(removeComment.rejected, function (state, action) {\n      state.removeCommentLoading = false;\n      state.removeCommentError = action.payload;\n    });\n    builder.addCase(likePost.pending, function (state, action) {\n      state.likePostLoading = true;\n      state.likePostDone = false;\n      state.likePostError = null;\n    });\n    builder.addCase(likePost.fulfilled, function (state, action) {\n      var post = state.mainPosts.find(function (post) {\n        return post.id === action.payload.PostId;\n      });\n      if (post) {\n        post.Likers.unshift({\n          id: action.payload.UserId\n        });\n        state.likePostLoading = false;\n        state.likePostDone = true;\n      }\n    });\n    builder.addCase(likePost.rejected, function (state, action) {\n      state.likePostLoading = false;\n      state.likePostError = action.payload;\n    });\n    builder.addCase(unlikePost.pending, function (state, action) {\n      state.unlikePostLoading = true;\n      state.unlikePostDone = false;\n      state.unlikePostError = null;\n    });\n    builder.addCase(unlikePost.fulfilled, function (state, action) {\n      var post = state.mainPosts.find(function (post) {\n        return post.id === action.payload.PostId;\n      });\n      if (post) {\n        post.Likers = unlikeOfPost.Likers.filter(function (like) {\n          return like.id !== action.payload.UserId;\n        });\n        state.unlikePostLoading = false;\n        state.unlikePostDone = true;\n      }\n    });\n    builder.addCase(unlikePost.rejected, function (state, action) {\n      state.unlikePostLoading = false;\n      state.unlikePostError = action.payload;\n    });\n    builder.addCase(retweet.pending, function (state, action) {\n      state.retweetLoading = true;\n      state.retweetDone = false;\n      state.retweetError = null;\n    });\n    builder.addCase(retweet.fulfilled, function (state, action) {\n      state.mainPosts.unshift(action.payload);\n      state.retweetLoading = false;\n      state.retweetDone = true;\n    });\n    builder.addCase(retweet.rejected, function (state, action) {\n      state.retweetLoading = false;\n      state.retweetError = action.payload;\n    });\n    builder.addCase(undoRetweet.pending, function (state, action) {\n      state.undoRetweetLoading = true;\n      state.undoRetweetDone = false;\n      state.undoRetweetError = null;\n    });\n    builder.addCase(undoRetweet.fulfilled, function (state, action) {\n      state.mainPosts = state.mainPosts.filter(function (post) {\n        return post.id !== action.payload.id;\n      });\n      state.undoRetweetLoading = false;\n      state.undoRetweetDone = true;\n    });\n    builder.addCase(undoRetweet.rejected, function (state, action) {\n      state.undoRetweetLoading = false;\n      state.undoRetweetError = action.payload;\n    });\n  },\n  reducers: undefined\n});\nexport var getDummyPosts = function getDummyPosts(number) {\n  return Array(number).fill().map(function (post, index) {\n    return {\n      id: shortId.generate(),\n      content: faker.lorem.paragraphs(2),\n      createdAt: \"\".concat(faker.date.past(10)).substring(0, 24),\n      User: {\n        id: shortId.generate(),\n        username: faker.name.fullName()\n      },\n      Images: [{\n        src: \"\".concat(faker.image.cats(), \"?random=\").concat(Date.now() + index),\n        alt: \"cat\"\n      }],\n      Comments: [],\n      Likers: []\n    };\n  });\n};\nexport var postMyDummyPost = function postMyDummyPost(payload, id) {\n  return {\n    id: id,\n    content: faker.lorem.paragraphs(2),\n    createdAt: \"\".concat(faker.date.past(10)).substring(0, 24),\n    User: {\n      id: payload.userId,\n      username: payload.User.username\n    },\n    Images: Array(Math.floor(Math.random() * 4) + 1).fill().map(function (image, index) {\n      return {\n        src: \"\".concat(faker.image.cats(), \"?random=\").concat(Date.now() + index),\n        alt: \"Cat_0\".concat(index)\n      };\n    }),\n    Comments: [],\n    Likers: []\n  };\n};\nexport var postMyDummyComment = function postMyDummyComment(payload, id) {\n  return {\n    id: id,\n    postId: payload.postId,\n    content: faker.lorem.sentences(2),\n    createdAt: \"\".concat(faker.date.past(5)).substring(0, 24),\n    User: {\n      id: payload.userId,\n      username: payload.User.username\n    }\n  };\n};\nexport default postSlice;","map":{"version":3,"names":["createSlice","HYDRATE","loadPosts","loadPostsByUser","loadSinglePost","addPost","editPost","removePost","addComment","editComment","removeComment","likePost","unlikePost","uploadImages","retweet","undoRetweet","shortId","faker","postSlice","name","initialState","bringMorePosts","loadPostsLoading","loadPostsDone","loadPostsError","bringMorePostsByUser","loadPostsByUserLoading","loadPostsByUserDone","loadPostsByUserError","loadSinglePostLoading","loadSinglePostDone","loadSinglePostError","uploadImagesLoading","uploadImagesDone","uploadImagesError","addPostLoading","addPostDone","addPostError","editPostLoading","editPostDone","editPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","editCommentLoading","editCommentDone","editCommentError","removeCommentLoading","removeCommentDone","removeCommentError","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","retweetLoading","retweetDone","retweetError","mainPosts","postsByUser","singlePost","imagePaths","extraReducers","builder","addCase","pending","state","action","fulfilled","concat","payload","length","rejected","unshift","retweetingPost","find","post","RetweetId","id","Retweet","content","updatedAt","filter","PostId","Comments","comment","Likers","UserId","unlikeOfPost","like","undoRetweetLoading","undoRetweetDone","undoRetweetError","reducers","undefined","getDummyPosts","number","Array","fill","map","index","generate","lorem","paragraphs","createdAt","date","past","substring","User","username","fullName","Images","src","image","cats","Date","now","alt","postMyDummyPost","userId","Math","floor","random","postMyDummyComment","postId","sentences"],"sources":["/Users/home/Desktop/new-projects/client-nextproject/store/reducers/post.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { HYDRATE } from 'next-redux-wrapper';\nimport {\n  loadPosts, loadPostsByUser, loadSinglePost,\n  addPost, editPost, removePost,\n  addComment, editComment, removeComment,\n  likePost, unlikePost, uploadImages,\n  retweet, undoRetweet\n} from \"../thunks/post\";\n\nimport shortId from 'shortid';\nimport { faker } from '@faker-js/faker/locale/en_CA';\n\nconst postSlice = createSlice({\n  name: 'post',\n  initialState: {\n    bringMorePosts: true,\n    loadPostsLoading: false,\n    loadPostsDone: false,\n    loadPostsError: null,\n    bringMorePostsByUser: true,\n    loadPostsByUserLoading: false,\n    loadPostsByUserDone: false,\n    loadPostsByUserError: null,\n    loadSinglePostLoading: false,\n    loadSinglePostDone: false,\n    loadSinglePostError: null,\n    uploadImagesLoading: false,\n    uploadImagesDone: false,\n    uploadImagesError: null,\n    addPostLoading: false,\n    addPostDone: false,\n    addPostError: null,\n    editPostLoading: false,\n    editPostDone: false,\n    editPostError: null,\n    removePostLoading: false,\n    removePostDone: false,\n    removePostError: null,\n    addCommentLoading: false,\n    addCommentDone: false,\n    addCommentError: null,\n    editCommentLoading: false,\n    editCommentDone: false,\n    editCommentError: null,\n    removeCommentLoading: false,\n    removeCommentDone: false,\n    removeCommentError: null,\n    likePostLoading: false,\n    likePostDone: false,\n    likePostError: null,\n    unlikePostLoading: false,\n    unlikePostDone: false,\n    unlikePostError: null,\n    retweetLoading: false,\n    retweetDone: false,\n    retweetError: null,\n    mainPosts: [],\n    postsByUser: [],\n    singlePost: null,\n    imagePaths: []\n  },\n  extraReducers(builder) {\n    // builder.addCase(HYDRATE, (state, action) => {\n    //   return {\n    //     ...state,\n    //     ...action.payload.post,\n    //   }\n    // })\n    builder.addCase(loadPosts.pending, (state, action) => {\n      state.loadPostsLoading = true;\n      state.loadPostsDone = false;\n      state.loadPostsError = null;\n    });\n    builder.addCase(loadPosts.fulfilled, (state, action) => {\n      state.mainPosts = state.mainPosts.concat(action.payload);\n      state.loadPostsLoading = false;\n      state.loadPostsDone = true;\n      state.bringMorePosts = action.payload.length == 10;\n    });\n    builder.addCase(loadPosts.rejected, (state, action) => {\n      state.loadPostsLoading = false;\n      state.loadPostsError = action.payload;\n    });\n    builder.addCase(loadPostsByUser.pending, (state, action) => {\n      state.loadPostsByUserLoading = true;\n      state.loadPostsByUserDone = false;\n      state.loadPostsByUserError = null;\n    });\n    builder.addCase(loadPostsByUser.fulfilled, (state, action) => {\n      state.postsByUser = state.postsByUser.concat(action.payload);\n      state.loadPostsByUserLoading = false;\n      state.loadPostsByUserDone = true;\n      state.bringMorePostsByUser = action.payload.length == 10;\n    });\n    builder.addCase(loadPostsByUser.rejected, (state, action) => {\n      state.loadPostsByUserLoading = false;\n      state.loadPostsByUserError = action.payload;\n    });\n    builder.addCase(loadSinglePost.pending, (state, action) => {\n      state.loadSinglePostLoading = true;\n      state.loadSinglePostDone = false;\n      state.loadSinglePostError = null;\n    });\n    builder.addCase(loadSinglePost.fulfilled, (state, action) => {\n      state.singlePost = action.payload;\n      state.loadSinglePostLoading = false;\n      state.loadSinglePostDone = true;\n    });\n    builder.addCase(loadSinglePost.rejected, (state, action) => {\n      state.loadSinglePostLoading = false;\n      state.loadSinglePostError = action.payload;\n    });\n    builder.addCase(uploadImages.pending, (state, action) => {\n      state.uploadImagesLoading = true;\n      state.uploadImagesDone = false;\n      state.uploadImagesError = null;\n    });\n    builder.addCase(uploadImages.fulfilled, (state, action) => {\n      state.imagePaths = action.payload;\n      state.uploadImagesLoading = false;\n      state.uploadImagesDone = true;\n    });\n    builder.addCase(uploadImages.rejected, (state, action) => {\n      state.uploadImagesLoading = false;\n      state.uploadImagesError = action.payload;\n    });\n    builder.addCase(addPost.pending, (state, action) => {\n      state.addPostLoading = true;\n      state.addPostDone = false;\n      state.addPostError = null;\n    });\n    builder.addCase(addPost.fulfilled, (state, action) => {\n      state.mainPosts.unshift(action.payload);\n      state.addPostLoading = false;\n      state.addPostDone = true;\n    });\n    builder.addCase(addPost.rejected, (state, action) => {\n      state.addPostLoading = false;\n      state.addPostError = action.payload;\n    });\n    builder.addCase(editPost.pending, (state, action) => {\n      state.editPostLoading = true;\n      state.editPostDone = false;\n      state.editPostError = null;\n    });\n    builder.addCase(editPost.fulfilled, (state, action) => {\n      const retweetingPost = state.mainPosts.find((post) => post.RetweetId === action.payload.id);\n      if (retweetingPost) {\n        retweetingPost.Retweet.content = action.payload.content;\n        retweetingPost.Retweet.updatedAt = action.payload.updatedAt;\n        state.editPostLoading = false;\n        state.editPostDone = true;\n      }\n        const post = state.mainPosts.find((post) => post.id === action.payload.id);\n        if (post) {\n          post.content = action.payload.content;\n          post.updatedAt = action.payload.updatedAt;\n          state.editPostLoading = false;\n          state.editPostDone = true;\n        }\n      \n    });\n    builder.addCase(editPost.rejected, (state, action) => {\n      state.editPostLoading = false;\n      state.editPostError = action.payload;\n    });\n    builder.addCase(removePost.pending, (state, action) => {\n      state.removePostLoading = true;\n      state.removePostDone = false;\n      state.removePostError = null;\n    });\n    builder.addCase(removePost.fulfilled, (state, action) => {\n      const retweetingPost = state.mainPosts.find((post) => post.RetweetId == action.payload.id);\n      if (retweetingPost) {\n        state.mainPosts = state.mainPosts.filter((post) => post.id !== retweetingPost.id);\n        state.removePostLoading = false;\n        state.removePostDone = true;\n      } else {\n        state.mainPosts = state.mainPosts.filter((post) => post.id !== action.payload.id);\n        state.removePostLoading = false;\n        state.removePostDone = true;\n      }\n    });\n    builder.addCase(removePost.rejected, (state, action) => {\n      state.removePostLoading = false;\n      state.removePostError = action.payload;\n    });\n    builder.addCase(addComment.pending, (state, action) => {\n      state.addCommentLoading = true;\n      state.addCommentDone = false;\n      state.addCommentError = null;\n    });\n    builder.addCase(addComment.fulfilled, (state, action)=>{\n      const retweetingPost = state.mainPosts.find((post) => post.RetweetId == action.payload.PostId);\n      if (retweetingPost) {\n        retweetingPost.Retweet.Comments.unshift(action.payload);\n        state.addCommentLoading = false;\n        state.addCommentDone = true;\n      }\n      const post = state.mainPosts.find((post) => post.id == action.payload.PostId);\n      if (post){\n        post.Comments.unshift(action.payload);\n        state.addCommentLoading = false;\n        state.addCommentDone = true;\n      }\n    })\n    builder.addCase(addComment.rejected, (state, action) => {\n      state.addCommentLoading = false;\n      state.addCommentError = action.payload;\n    });\n    builder.addCase(editComment.pending, (state, action) => {\n      state.editCommentLoading = true;\n      state.editCommentDone = false;\n      state.editCommentError = null;\n    });\n    builder.addCase(editComment.fulfilled, (state, action)=>{\n      const retweetingPost = state.mainPosts.find((post) => post.RetweetId == action.payload.PostId);\n      if (retweetingPost) {\n        const comment = retweetingPost.Retweet.Comments.find((comment) => comment.id == action.payload.id);\n        if (comment){\n          comment.content = action.payload.content;\n          comment.updatedAt = action.payload.updatedAt;\n          state.editCommentLoading = false;\n          state.editCommentDone = true;\n        }\n      }\n      const post = state.mainPosts.find((post) => post.id == action.payload.PostId);\n      if (post){\n        const comment = post.Comments.find((comment) => comment.id == action.payload.id);\n        if (comment){\n          comment.content = action.payload.content;\n          comment.updatedAt = action.payload.updatedAt;\n          state.editCommentLoading = false;\n          state.editCommentDone = true;\n        }\n      }\n    })\n    builder.addCase(editComment.rejected, (state, action) => {\n      state.editCommentLoading = false;\n      state.editCommentError = action.payload;\n    });\n    builder.addCase(removeComment.pending, (state, action) => {\n      state.removeCommentLoading = true;\n      state.removeCommentDone = false;\n      state.removeCommentError = null;\n    });\n    builder.addCase(removeComment.fulfilled, (state, action) => {\n      const retweetingPost = state.mainPosts.find((post) => post.RetweetId === action.payload.PostId);\n      if (retweetingPost) {\n        retweetingPost.Retweet.Comments = retweetingPost.Retweet.Comments.filter((comment) => comment.id !== action.payload.id);\n        state.removeCommentLoading = false;\n        state.removeCommentDone = true;\n      }\n      const post = state.mainPosts.find((post) => post.id === action.payload.PostId);\n      if (post) {\n        post.Comments = post.Comments.filter((comment) => comment.id !== action.payload.id);\n        state.removeCommentLoading = false;\n        state.removeCommentDone = true;\n      }\n    });\n    builder.addCase(removeComment.rejected, (state, action) => {\n      state.removeCommentLoading = false;\n      state.removeCommentError = action.payload;\n    });\n    builder.addCase(likePost.pending, (state, action) => {\n      state.likePostLoading = true;\n      state.likePostDone = false;\n      state.likePostError = null;\n    });\n    builder.addCase(likePost.fulfilled, (state, action) => {\n      const post = state.mainPosts.find((post) => post.id === action.payload.PostId);\n      if (post) {\n        post.Likers.unshift({id: action.payload.UserId});\n        state.likePostLoading = false;\n        state.likePostDone = true;\n      }\n    });\n    builder.addCase(likePost.rejected, (state, action) => {\n      state.likePostLoading = false;\n      state.likePostError = action.payload;\n    });\n    builder.addCase(unlikePost.pending, (state, action) => {\n      state.unlikePostLoading = true;\n      state.unlikePostDone = false;\n      state.unlikePostError = null;\n    });\n    builder.addCase(unlikePost.fulfilled, (state, action) => {\n      const post = state.mainPosts.find((post) => post.id === action.payload.PostId);\n      if (post) {\n        post.Likers = unlikeOfPost.Likers.filter((like) => like.id !== action.payload.UserId);\n        state.unlikePostLoading = false;\n        state.unlikePostDone = true;\n      }\n    });\n    builder.addCase(unlikePost.rejected, (state, action) => {\n      state.unlikePostLoading = false;\n      state.unlikePostError = action.payload;\n    });\n    builder.addCase(retweet.pending, (state, action) => {\n      state.retweetLoading = true;\n      state.retweetDone = false;\n      state.retweetError = null;\n    });\n    builder.addCase(retweet.fulfilled, (state, action) => {\n      state.mainPosts.unshift(action.payload);\n      state.retweetLoading = false;\n      state.retweetDone = true;\n    });\n    builder.addCase(retweet.rejected, (state, action) => {\n      state.retweetLoading = false;\n      state.retweetError = action.payload;\n    });\n    builder.addCase(undoRetweet.pending, (state, action) => {\n      state.undoRetweetLoading = true;\n      state.undoRetweetDone = false;\n      state.undoRetweetError = null;\n    });\n    builder.addCase(undoRetweet.fulfilled, (state, action) => {\n      state.mainPosts = state.mainPosts.filter((post) => post.id !== action.payload.id);\n      state.undoRetweetLoading = false;\n      state.undoRetweetDone = true;\n    });\n    builder.addCase(undoRetweet.rejected, (state, action) => {\n      state.undoRetweetLoading = false;\n      state.undoRetweetError = action.payload;\n    });\n  },\n  reducers: undefined\n})\n\nexport const getDummyPosts = (number) => Array(number).fill().map((post, index) => ({\n  id: shortId.generate(),\n  content: faker.lorem.paragraphs(2),\n  createdAt: `${faker.date.past(10)}`.substring(0,24),\n  User: {\n    id: shortId.generate(),\n    username: faker.name.fullName()\n  },\n  Images: [{\n    src: `${faker.image.cats()}?random=${Date.now()+index}`,\n    alt: \"cat\"\n  }],\n  Comments: [],\n  Likers: []\n}))\n\nexport const postMyDummyPost = (payload, id) => ({\n  id,\n  content: faker.lorem.paragraphs(2),\n  createdAt: `${faker.date.past(10)}`.substring(0,24),\n  User: {\n    id: payload.userId,\n    username: payload.User.username\n  },\n  Images: Array(Math.floor(Math.random()*4)+1).fill().map((image, index)=>({\n    src: `${faker.image.cats()}?random=${Date.now()+index}`,\n    alt: `Cat_0${index}`\n  })),\n  Comments: [],\n  Likers: []\n})\n\nexport const postMyDummyComment = (payload, id) => ({\n  id,\n  postId: payload.postId,\n  content: faker.lorem.sentences(2),\n  createdAt: `${faker.date.past(5)}`.substring(0,24),\n  User: {\n    id: payload.userId,\n    username: payload.User.username\n  },\n})\n\nexport default postSlice;"],"mappings":"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"},"metadata":{},"sourceType":"module"}