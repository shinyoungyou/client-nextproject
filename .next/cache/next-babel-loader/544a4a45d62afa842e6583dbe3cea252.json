{"ast":null,"code":"import { LoadPostsActionType, AddPostActionType, RemovePostActionType, AddCommentActionType, RemoveCommentActionType, LikePostActionType, UnlikePostActionType } from \"../action-types/post\";\nimport { getDummyPosts, postMyDummyPost } from '../reducers/post';\nimport { AddPostToMeActionType, RemovePostOfMeActionType } from \"../action-types/user\";\nexport var loadPostsRequest = {\n  type: LoadPostsActionType.LOAD_POSTS_REQUEST\n};\nexport var loadPostsSuccess = function loadPostsSuccess(number) {\n  return {\n    type: LoadPostsActionType.LOAD_POSTS_SUCCESS,\n    data: getDummyPosts(number)\n  };\n};\nexport var loadPostsFailure = function loadPostsFailure(error) {\n  return {\n    type: LoadPostsActionType.LOAD_POSTS_FAILURE,\n    error: error\n  };\n};\nexport var addPostRequest = function addPostRequest(data) {\n  return {\n    type: AddPostActionType.ADD_POST_REQUEST,\n    data: data\n  };\n};\n\n// before connect with backend\nexport var addPostSuccess = function addPostSuccess(data, id) {\n  return {\n    type: AddPostActionType.ADD_POST_SUCCESS,\n    data: postMyDummyPost(data, id)\n  };\n};\nexport var addPostToMe = function addPostToMe(id) {\n  return {\n    type: AddPostToMeActionType.ADD_POST_TO_ME,\n    data: id\n  };\n};\nexport var addPostFailure = function addPostFailure(error) {\n  return {\n    type: AddPostActionType.ADD_POST_FAILURE,\n    error: error\n  };\n};\nexport var removePostRequest = function removePostRequest(postId) {\n  return {\n    type: RemovePostActionType.REMOVE_POST_REQUEST,\n    data: postId\n  };\n};\nexport var removePostSuccess = function removePostSuccess(postId) {\n  return {\n    type: RemovePostActionType.REMOVE_POST_SUCCESS,\n    data: postId\n  };\n};\nexport var removePostOfMe = function removePostOfMe(postId) {\n  return {\n    type: RemovePostOfMeActionType.REMOVE_POST_OF_ME,\n    data: postId\n  };\n};\nexport var removePostFailure = function removePostFailure(error) {\n  return {\n    type: RemovePostActionType.REMOVE_POST_FAILURE,\n    error: error\n  };\n};\nexport var addCommentRequest = function addCommentRequest(data) {\n  return {\n    type: AddCommentActionType.ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\n// 백엔드 만들면 이런 식으로 data 안 옴. 백엔드 만드는 게 더 나을듯. ssr이기도 해서 next쓰려면 백\nexport var addCommentSuccess = function addCommentSuccess(data) {\n  return {\n    type: AddCommentActionType.ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\nexport var removeCommentRequest = function removeCommentRequest(comment) {\n  return {\n    type: RemoveCommentActionType.REMOVE_COMMENT_REQUEST,\n    data: comment\n  };\n};\nexport var likePostRequest = function likePostRequest(data) {\n  return {\n    type: LikePostActionType.LIKE_POST_REQUEST,\n    data: data\n  };\n};\nexport var unlikePostRequest = function unlikePostRequest(data) {\n  return {\n    type: UnlikePostActionType.UNLIKE_POST_REQUEST,\n    data: data\n  };\n};","map":{"version":3,"names":["LoadPostsActionType","AddPostActionType","RemovePostActionType","AddCommentActionType","RemoveCommentActionType","LikePostActionType","UnlikePostActionType","getDummyPosts","postMyDummyPost","AddPostToMeActionType","RemovePostOfMeActionType","loadPostsRequest","type","LOAD_POSTS_REQUEST","loadPostsSuccess","number","LOAD_POSTS_SUCCESS","data","loadPostsFailure","error","LOAD_POSTS_FAILURE","addPostRequest","ADD_POST_REQUEST","addPostSuccess","id","ADD_POST_SUCCESS","addPostToMe","ADD_POST_TO_ME","addPostFailure","ADD_POST_FAILURE","removePostRequest","postId","REMOVE_POST_REQUEST","removePostSuccess","REMOVE_POST_SUCCESS","removePostOfMe","REMOVE_POST_OF_ME","removePostFailure","REMOVE_POST_FAILURE","addCommentRequest","ADD_COMMENT_REQUEST","addCommentSuccess","removeCommentRequest","comment","REMOVE_COMMENT_REQUEST","likePostRequest","LIKE_POST_REQUEST","unlikePostRequest","UNLIKE_POST_REQUEST"],"sources":["/Users/home/Desktop/new-projects/client-nextproject/store/action-creators/post.ts"],"sourcesContent":["import {\n    LoadPostsActionType,\n    AddPostActionType,\n    RemovePostActionType,\n    AddCommentActionType,\n    RemoveCommentActionType,\n    LikePostActionType,\n    UnlikePostActionType\n} from \"../action-types/post\";\nimport {\n    AddCommentRequestAction,\n    AddPostFailureAction,\n    AddPostRequestAction,\n    AddPostSuccessAction,\n    AddPostToMeAction,\n    LikePostRequestAction,\n    LoadPostsFailureAction,\n    LoadPostsRequestAction,\n    LoadPostsSuccessAction,\n    RemoveCommentRequestAction,\n    RemovePostFailureAction,\n    RemovePostOfMeActionAction,\n    RemovePostRequestAction,\n    RemovePostSuccessAction,\n    UnlikePostRequestAction\n} from \"../actions/post\";\nimport { User } from '../state-types/user';\nimport { Post, Comment, Like } from '../state-types/post';\nimport { getDummyPosts, postMyDummyPost, postMyDummyComment } from '../reducers/post'\nimport {AddPostToMeActionType, RemovePostOfMeActionType} from \"../action-types/user\";\nexport const loadPostsRequest: LoadPostsRequestAction = {\n  type: LoadPostsActionType.LOAD_POSTS_REQUEST,\n}\n\nexport const loadPostsSuccess = (number: number): LoadPostsSuccessAction => {\n  return {\n    type: LoadPostsActionType.LOAD_POSTS_SUCCESS,\n    data: getDummyPosts(number)\n  }\n}\n\nexport const loadPostsFailure = (error: string) : LoadPostsFailureAction => {\n  return {\n    type: LoadPostsActionType.LOAD_POSTS_FAILURE,\n    error\n  }\n}\n\nexport const addPostRequest = (data: {\n  content: string,\n  userId: number | string,\n  User: Partial<User>\n}): AddPostRequestAction => {\n  return {\n    type: AddPostActionType.ADD_POST_REQUEST,\n    data\n  }\n}\n\n// before connect with backend\nexport const addPostSuccess = (data: Post, id: string): AddPostSuccessAction => {\n  return {\n    type: AddPostActionType.ADD_POST_SUCCESS,\n    data: postMyDummyPost(data, id)\n  }\n}\n\nexport const addPostToMe = (id: string): AddPostToMeAction => {\n  return {\n    type: AddPostToMeActionType.ADD_POST_TO_ME,\n    data: id\n  }\n}\n\nexport const addPostFailure = (error: string): AddPostFailureAction => {\n  return {\n    type: AddPostActionType.ADD_POST_FAILURE,\n    error\n  }\n}\n\nexport const removePostRequest = (postId: number | string): RemovePostRequestAction => {\n  return {\n    type: RemovePostActionType.REMOVE_POST_REQUEST,\n    data: postId\n  }\n}\n\nexport const removePostSuccess = (postId: number | string): RemovePostSuccessAction => {\n  return {\n    type: RemovePostActionType.REMOVE_POST_SUCCESS,\n    data: postId\n  }\n}\n\nexport const removePostOfMe = (postId: number | string): RemovePostOfMeActionAction => {\n  return {\n    type: RemovePostOfMeActionType.REMOVE_POST_OF_ME,\n    data: postId\n  }\n}\n\nexport const removePostFailure = (error: string): RemovePostFailureAction => {\n  return {\n    type: RemovePostActionType.REMOVE_POST_FAILURE,\n    error\n  }\n}\nexport const addCommentRequest = (data: {\n  content: string,\n  postId: number | string,\n  userId: number | string,\n  User: Partial<User>\n}): AddCommentRequestAction => {\n  return {\n    type: AddCommentActionType.ADD_COMMENT_REQUEST,\n    data\n  }\n}\n\n// 백엔드 만들면 이런 식으로 data 안 옴. 백엔드 만드는 게 더 나을듯. ssr이기도 해서 next쓰려면 백\nexport const addCommentSuccess = (data: {\n    content: string,\n    postId: number | string,\n    userId: number | string,\n    User: Partial<User>\n}): AddCommentRequestAction => {\n    return {\n        type: AddCommentActionType.ADD_COMMENT_REQUEST,\n        data\n    }\n}\n\nexport const removeCommentRequest = (comment: Partial<Comment>): RemoveCommentRequestAction => {\n  return {\n    type: RemoveCommentActionType.REMOVE_COMMENT_REQUEST,\n    data: comment\n  }\n}\n\n\nexport const likePostRequest = (data: {\n    postId: number | string,\n    userId: number | string,\n}): LikePostRequestAction => {\n  return {\n    type: LikePostActionType.LIKE_POST_REQUEST,\n    data\n  }\n}\n\nexport const unlikePostRequest = (data: {\n    postId: number | string,\n    userId: number | string,\n}): UnlikePostRequestAction => {\n  return {\n    type: UnlikePostActionType.UNLIKE_POST_REQUEST,\n    data\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}