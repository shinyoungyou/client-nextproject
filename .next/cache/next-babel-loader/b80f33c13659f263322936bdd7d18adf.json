{"ast":null,"code":"var __jsx = React.createElement;\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { follow, unfollow } from \"../store/thunks/user\";\nimport React from \"react\";\nimport { StyledMenu } from \"../styles\";\nimport { MenuItem } from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport ListItemDecorator from \"@mui/joy/ListItemDecorator\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport PersonAddAltRoundedIcon from \"@mui/icons-material/PersonAddAltRounded\";\nimport BackspaceIcon from '@mui/icons-material/Backspace';\nimport FlagIcon from \"@mui/icons-material/Flag\";\nimport { LoadingButton } from \"@mui/lab\";\nvar MoreMenu = function MoreMenu(_ref) {\n  var item = _ref.item,\n    anchorEl = _ref.anchorEl,\n    setAnchorEl = _ref.setAnchorEl,\n    open = _ref.open,\n    editStatus = _ref.editStatus,\n    setEditStatus = _ref.setEditStatus,\n    handleEdit = _ref.handleEdit,\n    editLoading = _ref.editLoading,\n    handleDelete = _ref.handleDelete,\n    removeLoading = _ref.removeLoading;\n  var _useSelector = useSelector(function (state) {\n      return state.user;\n    }),\n    my = _useSelector.my,\n    followLoading = _useSelector.followLoading,\n    unfollowLoading = _useSelector.unfollowLoading;\n  var dispatch = useDispatch();\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n  var isFollowing = my === null || my === void 0 ? void 0 : my.Followings.find(function (user) {\n    return user.id == item.User.id;\n  });\n  var handleFollowing = function handleFollowing(item) {\n    if (isFollowing) {\n      dispatch(unfollow({\n        id: item.User.id\n      }));\n    } else {\n      dispatch(follow(item.User));\n    }\n  };\n  return __jsx(StyledMenu, {\n    id: \"demo-customized-menu\",\n    MenuListProps: {\n      'aria-labelledby': 'demo-customized-button'\n    },\n    anchorEl: anchorEl,\n    open: open,\n    onClose: handleClose\n  }, (my === null || my === void 0 ? void 0 : my.id) == item.User.id ? __jsx(React.Fragment, null, __jsx(MenuItem, {\n    key: \"Edit\",\n    onClick: handleEdit\n  }, __jsx(LoadingButton, {\n    loading: editLoading,\n    sx: {\n      p: 0,\n      color: \"inherit\",\n      textTransform: \"inherit\",\n      fontSize: \"inherit\"\n    }\n  }, __jsx(ListItemDecorator, {\n    sx: {\n      color: 'inherit'\n    }\n  }, __jsx(EditIcon, null)), ' ', editStatus === \"beforeEdit\" && \"Edit\", editStatus === \"editing\" && \"Done\")), editStatus === \"editing\" && __jsx(MenuItem, {\n    key: \"Cancel\",\n    onClick: function onClick() {\n      return setEditStatus(\"beforeEdit\");\n    }\n  }, __jsx(LoadingButton, {\n    loading: editLoading,\n    sx: {\n      p: 0,\n      color: \"inherit\",\n      textTransform: \"inherit\",\n      fontSize: \"inherit\"\n    }\n  }, __jsx(ListItemDecorator, {\n    sx: {\n      color: 'inherit'\n    }\n  }, __jsx(BackspaceIcon, null)), ' ', \"Cancel\")), __jsx(MenuItem, {\n    key: \"Delete\",\n    onClick: handleDelete\n  }, __jsx(LoadingButton, {\n    loading: removeLoading,\n    sx: {\n      p: 0,\n      color: \"inherit\",\n      textTransform: \"inherit\",\n      fontSize: \"inherit\"\n    }\n  }, __jsx(ListItemDecorator, {\n    sx: {\n      color: 'inherit'\n    }\n  }, __jsx(DeleteIcon, null)), ' ', \"Delete\"))) : __jsx(React.Fragment, null, __jsx(MenuItem, {\n    key: isFollowing ? \"Unfollow\" : \"Follow\",\n    onClick: function onClick() {\n      return handleFollowing(item);\n    },\n    disableRipple: true\n  }, __jsx(LoadingButton, {\n    loading: isFollowing ? unfollowLoading : followLoading,\n    sx: {\n      p: 0,\n      color: \"inherit\",\n      textTransform: \"inherit\",\n      fontSize: \"inherit\"\n    }\n  }, __jsx(ListItemDecorator, {\n    sx: {\n      color: 'inherit'\n    }\n  }, __jsx(PersonAddAltRoundedIcon, null)), ' ', isFollowing ? \"Unfollow\" : \"Follow\")), __jsx(MenuItem, {\n    key: \"Report\",\n    onClick: handleClose,\n    disableRipple: true\n  }, __jsx(FlagIcon, null), \"Report\")));\n};\nexport default MoreMenu;","map":null,"metadata":{},"sourceType":"module"}