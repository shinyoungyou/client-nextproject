{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { HYDRATE } from 'next-redux-wrapper';\nimport userSlice from './user';\nimport postSlice from './post';\nvar rootReducer = function rootReducer(state, action) {\n  switch (action.type) {\n    case HYDRATE:\n      return action.payload;\n    default:\n      {\n        var combinedReducer = combineReducers({\n          user: userSlice.reducer,\n          post: postSlice.reducer\n        });\n        return combinedReducer(state, action);\n      }\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["combineReducers","HYDRATE","userSlice","postSlice","rootReducer","state","action","type","payload","combinedReducer","user","reducer","post"],"sources":["/Users/home/Desktop/new-projects/client-nextproject/store/reducers/index.js"],"sourcesContent":["import { combineReducers } from 'redux';\nimport { HYDRATE } from 'next-redux-wrapper';\n\nimport userSlice from './user';\nimport postSlice from './post';\n\nconst rootReducer = (state, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      return action.payload;\n    default: {\n      const combinedReducer = combineReducers({\n        user: userSlice.reducer,\n        post: postSlice.reducer,\n      });\n      return combinedReducer(state, action);\n    }\n  }\n};\n\nexport default rootReducer;\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,oBAAoB;AAE5C,OAAOC,SAAS,MAAM,QAAQ;AAC9B,OAAOC,SAAS,MAAM,QAAQ;AAE9B,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAIC,KAAK,EAAEC,MAAM,EAAK;EACrC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKN,OAAO;MACV,OAAOK,MAAM,CAACE,OAAO;IACvB;MAAS;QACP,IAAMC,eAAe,GAAGT,eAAe,CAAC;UACtCU,IAAI,EAAER,SAAS,CAACS,OAAO;UACvBC,IAAI,EAAET,SAAS,CAACQ;QAClB,CAAC,CAAC;QACF,OAAOF,eAAe,CAACJ,KAAK,EAAEC,MAAM,CAAC;MACvC;EAAC;AAEL,CAAC;AAED,eAAeF,WAAW"},"metadata":{},"sourceType":"module"}