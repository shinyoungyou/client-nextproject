{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { createWrapper } from 'next-redux-wrapper';\nimport logger from 'redux-logger';\nimport rootReducer from './reducers';\nconst createStore = () => {\n  const store = configureStore({\n    reducer: rootReducer,\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(logger),\n    // redux-toolkit 은 devTools 등의 미들웨어들을 기본적으로 제공 (사용하고 싶은 미들웨어가 있다면 추가로 정의 ex.logger),\n    devTools: true\n  });\n  return store;\n};\nconst wrapper = createWrapper(createStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["configureStore","createWrapper","logger","rootReducer","createStore","store","reducer","middleware","getDefaultMiddleware","concat","devTools","wrapper","debug"],"sources":["/Users/home/Desktop/new-projects/client-nextproject/store/index.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport { createWrapper } from 'next-redux-wrapper';\nimport logger from 'redux-logger';\nimport rootReducer from './reducers';\n\nconst createStore = () => {\n  const store = configureStore({\n    reducer: rootReducer,\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n    // redux-toolkit 은 devTools 등의 미들웨어들을 기본적으로 제공 (사용하고 싶은 미들웨어가 있다면 추가로 정의 ex.logger),\n    devTools: process.env.NODE_ENV === 'development',\n  });\n  return store;\n};\n\nconst wrapper = createWrapper(createStore, {\n  debug: process.env.NODE_ENV === 'development',\n});\n\nexport default wrapper;\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,aAAa,QAAQ,oBAAoB;AAClD,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,WAAW,MAAM,YAAY;AAEpC,MAAMC,WAAW,GAAG,MAAM;EACxB,MAAMC,KAAK,GAAGL,cAAc,CAAC;IAC3BM,OAAO,EAAEH,WAAW;IACpBI,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB,EAAE,CAACC,MAAM,CAACP,MAAM,CAAC;IAC3E;IACAQ,QAAQ;EACV,CAAC,CAAC;EACF,OAAOL,KAAK;AACd,CAAC;AAED,MAAMM,OAAO,GAAGV,aAAa,CAACG,WAAW,EAAE;EACzCQ,KAAK;AACP,CAAC,CAAC;AAEF,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}