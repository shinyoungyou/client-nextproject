{"ast":null,"code":"var __jsx = React.createElement;\nimport { useSelector, useDispatch } from 'react-redux';\nimport { loadPosts } from \"../store/thunks/post\";\nimport React, { useState, useEffect } from \"react\";\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nvar Home = function Home() {\n  var _useSelector = useSelector(function (state) {\n      return state.user;\n    }),\n    my = _useSelector.my;\n  var _useSelector2 = useSelector(function (state) {\n      return state.post;\n    }),\n    mainPosts = _useSelector2.mainPosts,\n    loadPostsLoading = _useSelector2.loadPostsLoading,\n    bringMorePosts = _useSelector2.bringMorePosts;\n  var dispatch = useDispatch();\n  var _useState = useState(-1),\n    prevLastId = _useState[0],\n    setPrevLastId = _useState[1];\n\n  // useEffect(()=>{\n  //   if(mainPosts.length < 10){\n  //     dispatch(loadMyInfo());\n  //     dispatch(loadPosts());\n  //   }\n  //   console.log(\"loadPosts\")\n  // }, [])\n\n  useEffect(function () {\n    var handleScroll = function handleScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (!loadPostsLoading && bringMorePosts) {\n          var _mainPosts, _mainPosts3;\n          if (prevLastId != ((_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id)) {\n            var _mainPosts2;\n            dispatch(loadPosts({\n              lastId: (_mainPosts2 = mainPosts[mainPosts.length - 1]) === null || _mainPosts2 === void 0 ? void 0 : _mainPosts2.id\n            }));\n          }\n          setPrevLastId((_mainPosts3 = mainPosts[mainPosts.length - 1]) === null || _mainPosts3 === void 0 ? void 0 : _mainPosts3.id);\n        }\n      }\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    return function () {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [loadPostsLoading, bringMorePosts]);\n  return __jsx(AppLayout, null, my !== null && __jsx(PostForm, null), mainPosts.map(function (post) {\n    return post.Retweet ? __jsx(PostCard, {\n      post: post.Retweet,\n      posts: mainPosts,\n      retweetingPostId: post.id,\n      key: post.id\n    }) : __jsx(PostCard, {\n      post: post,\n      posts: mainPosts,\n      retweetingPostId: null,\n      key: post.id\n    });\n  }));\n};\nexport var __N_SSP = true;\nexport default Home;","map":null,"metadata":{},"sourceType":"module"}