{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { createWrapper } from 'next-redux-wrapper';\nimport logger from 'redux-logger';\nimport rootReducer from '../reducers';\nconst isDev = true;\nconst createStore = () => {\n  const middleware = getDefaultMiddleware();\n  if (isDev) {\n    middleware.push(logger);\n  }\n  const store = configureStore({\n    reducer: rootReducer,\n    middleware,\n    devTools: isDev\n  });\n  return store;\n};\nconst wrapper = createWrapper(createStore, {\n  debug: isDev\n});\nexport default wrapper;","map":{"version":3,"names":["configureStore","getDefaultMiddleware","createWrapper","logger","rootReducer","isDev","createStore","middleware","push","store","reducer","devTools","wrapper","debug"],"sources":["/Users/home/Desktop/new-projects/client-nextproject/store/thunks/user.js"],"sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { createWrapper } from 'next-redux-wrapper';\nimport logger from 'redux-logger';\nimport rootReducer from '../reducers';\n\nconst isDev = process.env.NODE_ENV === 'development';\nconst createStore = () => {\n    const middleware = getDefaultMiddleware();\n    if (isDev) {\n        middleware.push(logger);\n    }\n    const store = configureStore({\n        reducer: rootReducer,\n        middleware,\n        devTools: isDev,\n    });\n    return store;\n};\n\nconst wrapper = createWrapper(createStore, {\n    debug: isDev,\n});\n\nexport default wrapper;\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,oBAAoB,QAAQ,kBAAkB;AACvE,SAASC,aAAa,QAAQ,oBAAoB;AAClD,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,WAAW,MAAM,aAAa;AAErC,MAAMC,KAAK,OAAyC;AACpD,MAAMC,WAAW,GAAG,MAAM;EACtB,MAAMC,UAAU,GAAGN,oBAAoB,EAAE;EACzC,IAAII,KAAK,EAAE;IACPE,UAAU,CAACC,IAAI,CAACL,MAAM,CAAC;EAC3B;EACA,MAAMM,KAAK,GAAGT,cAAc,CAAC;IACzBU,OAAO,EAAEN,WAAW;IACpBG,UAAU;IACVI,QAAQ,EAAEN;EACd,CAAC,CAAC;EACF,OAAOI,KAAK;AAChB,CAAC;AAED,MAAMG,OAAO,GAAGV,aAAa,CAACI,WAAW,EAAE;EACvCO,KAAK,EAAER;AACX,CAAC,CAAC;AAEF,eAAeO,OAAO"},"metadata":{},"sourceType":"module"}