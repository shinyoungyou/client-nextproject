{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport instance from '.';\nimport { addPostToMe, removePostToMe } from \"../reducers/user\";\nimport { getDummyPosts, postMyDummyPost, postMyDummyComment } from '../reducers/post';\nimport shortId from 'shortid';\nvar pause = function pause(duration) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, duration);\n  });\n};\nexport var loadPosts = createAsyncThunk('post/loadPosts', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(payload, thunkAPI) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return instance.get(\"posts?lastId=\".concat((payload === null || payload === void 0 ? void 0 : payload.lastId) || 0));\n        case 3:\n          response = _context.sent;\n          return _context.abrupt(\"return\", thunkAPI.fulfillWithValue(response.data));\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          return _context.abrupt(\"return\", thunkAPI.rejectWithValue(_context.t0.response.data));\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\nexport var uploadImages = createAsyncThunk('post/uploadImages', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(payload, thunkAPI) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return instance.post(\"post/images/\", payload);\n        case 3:\n          response = _context2.sent;\n          return _context2.abrupt(\"return\", thunkAPI.fulfillWithValue(response.data));\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          return _context2.abrupt(\"return\", thunkAPI.rejectWithValue(_context2.t0.response.data));\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[0, 7]]);\n  }));\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nexport var addPost = createAsyncThunk('post/addPost', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(payload, thunkAPI) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return instance.post('post/', payload);\n        case 3:\n          response = _context3.sent;\n          // await pause(1000);\n          // const id = shortId.generate();\n          thunkAPI.dispatch(addPostToMe(response.data.id));\n          return _context3.abrupt(\"return\", thunkAPI.fulfillWithValue(response.data));\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          return _context3.abrupt(\"return\", thunkAPI.rejectWithValue(_context3.t0.response.data));\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[0, 8]]);\n  }));\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nexport var loadPost = createAsyncThunk('post/loadPost', /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(payload, thunkAPI) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return instance.get(\"post/\".concat(payload.id));\n        case 3:\n          response = _context4.sent;\n          return _context4.abrupt(\"return\", thunkAPI.fulfillWithValue(response.data));\n        case 7:\n          _context4.prev = 7;\n          _context4.t0 = _context4[\"catch\"](0);\n          return _context4.abrupt(\"return\", thunkAPI.rejectWithValue(_context4.t0.response.data));\n        case 10:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4, null, [[0, 7]]);\n  }));\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}());\nexport var editPost = createAsyncThunk('post/editPost', /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(payload, thunkAPI) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return instance.patch(\"post/\".concat(payload.id), payload);\n        case 3:\n          response = _context5.sent;\n          return _context5.abrupt(\"return\", thunkAPI.fulfillWithValue(response.data));\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          return _context5.abrupt(\"return\", thunkAPI.rejectWithValue(_context5.t0.response.data));\n        case 10:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5, null, [[0, 7]]);\n  }));\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}());\nexport var removePost = createAsyncThunk('post/removePost', /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(payload, thunkAPI) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return instance[\"delete\"](\"post/\".concat(payload.id));\n        case 3:\n          response = _context6.sent;\n          // await pause(1000);\n          thunkAPI.dispatch(removePostToMe(response.data));\n          return _context6.abrupt(\"return\", thunkAPI.fulfillWithValue(response.data));\n        case 8:\n          _context6.prev = 8;\n          _context6.t0 = _context6[\"catch\"](0);\n          return _context6.abrupt(\"return\", thunkAPI.rejectWithValue(_context6.t0.response.data));\n        case 11:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6, null, [[0, 8]]);\n  }));\n  return function (_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}());\nexport var addComment = createAsyncThunk('post/addComment', /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(payload, thunkAPI) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return instance.post(\"post/\".concat(payload.postId, \"/comment/\"), payload);\n        case 3:\n          response = _context7.sent;\n          return _context7.abrupt(\"return\", thunkAPI.fulfillWithValue(response.data));\n        case 7:\n          _context7.prev = 7;\n          _context7.t0 = _context7[\"catch\"](0);\n          return _context7.abrupt(\"return\", thunkAPI.rejectWithValue(_context7.t0.response.data));\n        case 10:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7, null, [[0, 7]]);\n  }));\n  return function (_x13, _x14) {\n    return _ref7.apply(this, arguments);\n  };\n}());\nexport var editComment = createAsyncThunk('post/editComment', /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(payload, thunkAPI) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _context8.next = 3;\n          return instance.patch(\"post/\".concat(payload.postId, \"/comment/\").concat(payload.id), payload);\n        case 3:\n          response = _context8.sent;\n          return _context8.abrupt(\"return\", thunkAPI.fulfillWithValue(response.data));\n        case 7:\n          _context8.prev = 7;\n          _context8.t0 = _context8[\"catch\"](0);\n          return _context8.abrupt(\"return\", thunkAPI.rejectWithValue(_context8.t0.response.data));\n        case 10:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8, null, [[0, 7]]);\n  }));\n  return function (_x15, _x16) {\n    return _ref8.apply(this, arguments);\n  };\n}());\nexport var removeComment = createAsyncThunk('post/removeComment', /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(payload, thunkAPI) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return instance[\"delete\"](\"post/\".concat(payload.postId, \"/comment/\").concat(payload.id));\n        case 3:\n          response = _context9.sent;\n          return _context9.abrupt(\"return\", thunkAPI.fulfillWithValue(response.data));\n        case 7:\n          _context9.prev = 7;\n          _context9.t0 = _context9[\"catch\"](0);\n          return _context9.abrupt(\"return\", thunkAPI.rejectWithValue(_context9.t0.response.data));\n        case 10:\n        case \"end\":\n          return _context9.stop();\n      }\n    }, _callee9, null, [[0, 7]]);\n  }));\n  return function (_x17, _x18) {\n    return _ref9.apply(this, arguments);\n  };\n}());\nexport var likePost = createAsyncThunk('post/likePost', /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(payload, thunkAPI) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.prev = 0;\n          _context10.next = 3;\n          return instance.post(\"post/\".concat(payload.postId, \"/like\"));\n        case 3:\n          response = _context10.sent;\n          return _context10.abrupt(\"return\", thunkAPI.fulfillWithValue(response.data));\n        case 7:\n          _context10.prev = 7;\n          _context10.t0 = _context10[\"catch\"](0);\n          return _context10.abrupt(\"return\", thunkAPI.rejectWithValue(_context10.t0.response.data));\n        case 10:\n        case \"end\":\n          return _context10.stop();\n      }\n    }, _callee10, null, [[0, 7]]);\n  }));\n  return function (_x19, _x20) {\n    return _ref10.apply(this, arguments);\n  };\n}());\nexport var unlikePost = createAsyncThunk('post/unlikePost', /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(payload, thunkAPI) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n      while (1) switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return instance[\"delete\"](\"post/\".concat(payload.postId, \"/like\"));\n        case 3:\n          response = _context11.sent;\n          return _context11.abrupt(\"return\", thunkAPI.fulfillWithValue(response.data));\n        case 7:\n          _context11.prev = 7;\n          _context11.t0 = _context11[\"catch\"](0);\n          return _context11.abrupt(\"return\", thunkAPI.rejectWithValue(_context11.t0.response.data));\n        case 10:\n        case \"end\":\n          return _context11.stop();\n      }\n    }, _callee11, null, [[0, 7]]);\n  }));\n  return function (_x21, _x22) {\n    return _ref11.apply(this, arguments);\n  };\n}());\nexport var retweet = createAsyncThunk('post/retweet', /*#__PURE__*/function () {\n  var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(payload, thunkAPI) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n      while (1) switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.prev = 0;\n          _context12.next = 3;\n          return instance.post(\"post/\".concat(payload.id, \"/retweet\"), payload);\n        case 3:\n          response = _context12.sent;\n          // await pause(1000);\n          // const id = shortId.generate();\n          thunkAPI.dispatch(addPostToMe(response.data.id));\n          return _context12.abrupt(\"return\", thunkAPI.fulfillWithValue(response.data));\n        case 8:\n          _context12.prev = 8;\n          _context12.t0 = _context12[\"catch\"](0);\n          return _context12.abrupt(\"return\", thunkAPI.rejectWithValue(_context12.t0.response.data));\n        case 11:\n        case \"end\":\n          return _context12.stop();\n      }\n    }, _callee12, null, [[0, 8]]);\n  }));\n  return function (_x23, _x24) {\n    return _ref12.apply(this, arguments);\n  };\n}());\nexport var undoRetweet = createAsyncThunk('post/undoRetweet', /*#__PURE__*/function () {\n  var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(payload, thunkAPI) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n      while (1) switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.prev = 0;\n          _context13.next = 3;\n          return instance[\"delete\"](\"post/\".concat(payload.id, \"/retweet\"));\n        case 3:\n          response = _context13.sent;\n          // await pause(1000);\n          thunkAPI.dispatch(removePostToMe(response.data));\n          return _context13.abrupt(\"return\", thunkAPI.fulfillWithValue(response.data));\n        case 8:\n          _context13.prev = 8;\n          _context13.t0 = _context13[\"catch\"](0);\n          return _context13.abrupt(\"return\", thunkAPI.rejectWithValue(_context13.t0.response.data));\n        case 11:\n        case \"end\":\n          return _context13.stop();\n      }\n    }, _callee13, null, [[0, 8]]);\n  }));\n  return function (_x25, _x26) {\n    return _ref13.apply(this, arguments);\n  };\n}());","map":{"version":3,"names":["createAsyncThunk","instance","addPostToMe","removePostToMe","getDummyPosts","postMyDummyPost","postMyDummyComment","shortId","pause","duration","Promise","resolve","setTimeout","loadPosts","payload","thunkAPI","get","lastId","response","fulfillWithValue","data","rejectWithValue","uploadImages","post","addPost","dispatch","id","loadPost","editPost","patch","removePost","addComment","postId","editComment","removeComment","likePost","unlikePost","retweet","undoRetweet"],"sources":["/Users/home/Desktop/new-projects/client-nextproject/store/thunks/post.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport instance from '.';\nimport { addPostToMe, removePostToMe } from \"../reducers/user\";\nimport { getDummyPosts, postMyDummyPost, postMyDummyComment } from '../reducers/post';\n\nimport shortId from 'shortid';\n\nconst pause = (duration) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, duration);\n  });\n};\n\nexport const loadPosts = createAsyncThunk('post/loadPosts', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.get(`posts?lastId=${payload?.lastId || 0}`);\n    // await pause(1000);\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n    // return thunkAPI.fulfillWithValue(getDummyPosts(10)); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const uploadImages = createAsyncThunk('post/uploadImages', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.post(`post/images/`, payload);\n    // await pause(1000);\n    // const id = shortId.generate();\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n    // return thunkAPI.fulfillWithValue(postMyDummyComment(payload, id)); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const addPost = createAsyncThunk('post/addPost', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.post('post/', payload);\n    // await pause(1000);\n    // const id = shortId.generate();\n    thunkAPI.dispatch(addPostToMe(response.data.id));\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n    // return thunkAPI.fulfillWithValue(postMyDummyPost(payload, id)); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const loadPost = createAsyncThunk('post/loadPost', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.get(`post/${payload.id}`);\n    // await pause(1000);\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n    // return thunkAPI.fulfillWithValue(getDummyPosts(10)); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const editPost = createAsyncThunk('post/editPost', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.patch(`post/${payload.id}`, payload);\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const removePost = createAsyncThunk('post/removePost', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.delete(`post/${payload.id}`);\n    // await pause(1000);\n    thunkAPI.dispatch(removePostToMe(response.data));\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n    // return thunkAPI.fulfillWithValue(payload); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const addComment = createAsyncThunk('post/addComment', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.post(`post/${payload.postId}/comment/`, payload);\n    // await pause(1000);\n    // const id = shortId.generate();\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n    // return thunkAPI.fulfillWithValue(postMyDummyComment(payload, id)); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const editComment = createAsyncThunk('post/editComment', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.patch(`post/${payload.postId}/comment/${payload.id}`, payload);\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const removeComment = createAsyncThunk('post/removeComment', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.delete(`post/${payload.postId}/comment/${payload.id}`);\n    // await pause(1000);\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const likePost = createAsyncThunk('post/likePost', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.post(`post/${payload.postId}/like`);\n    // await pause(1000);\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const unlikePost = createAsyncThunk('post/unlikePost', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.delete(`post/${payload.postId}/like`);\n    // await pause(1000);\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const retweet = createAsyncThunk('post/retweet', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.post(`post/${payload.id}/retweet`, payload);\n    // await pause(1000);\n    // const id = shortId.generate();\n    thunkAPI.dispatch(addPostToMe(response.data.id));\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n    // return thunkAPI.fulfillWithValue(postMyDummyPost(payload, id)); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const undoRetweet = createAsyncThunk('post/undoRetweet', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.delete(`post/${payload.id}/retweet`);\n    // await pause(1000);\n    thunkAPI.dispatch(removePostToMe(response.data));\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n    // return thunkAPI.fulfillWithValue(payload); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}