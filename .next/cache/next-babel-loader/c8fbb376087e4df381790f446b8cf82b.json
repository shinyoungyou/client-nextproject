{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useDispatch, useSelector } from 'react-redux';\nimport { signUp } from '../store/thunks/user';\nimport Head from \"next/head\";\nimport { useRouter } from 'next/router';\nimport { useState, useEffect, useCallback } from \"react\";\nimport AppLayout from '../components/AppLayout';\nimport { Box, IconButton, OutlinedInput, InputLabel, InputAdornment, FormControl, FormControlLabel, Checkbox, Alert } from \"@mui/material\";\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport { LoadingButton } from '@mui/lab';\nvar Signup = function Signup() {\n  var dispatch = useDispatch();\n  var _useSelector = useSelector(function (state) {\n      return state.user;\n    }),\n    signUpLoading = _useSelector.signUpLoading,\n    signUpDone = _useSelector.signUpDone,\n    signUpError = _useSelector.signUpError,\n    my = _useSelector.my;\n  var _useState = useState({\n      email: \"\",\n      username: \"\",\n      pass: \"\",\n      passCheck: \"\",\n      term: \"\"\n    }),\n    form = _useState[0],\n    setForm = _useState[1];\n  var _useState2 = useState(false),\n    passError = _useState2[0],\n    setPassError = _useState2[1];\n  var _useState3 = useState(false),\n    termError = _useState3[0],\n    setTermError = _useState3[1];\n  var router = useRouter();\n  var email = form.email,\n    username = form.username,\n    pass = form.pass,\n    passCheck = form.passCheck,\n    term = form.term;\n  var _useState4 = useState(false),\n    showPassword = _useState4[0],\n    setShowPassword = _useState4[1];\n  useEffect(function () {\n    if (my !== null && my.id) router.replace('/');\n    return;\n  }, [my]);\n  useEffect(function () {\n    if (signUpDone) {\n      setForm({\n        email: \"\",\n        username: \"\",\n        pass: \"\",\n        passCheck: \"\",\n        term: \"\"\n      });\n      router.replace('/');\n    }\n  }, [signUpDone]);\n  useEffect(function () {\n    if (signUpError) {\n      // mui alert compo 사용하기\n      alert(signUpError);\n    }\n  }, [signUpError]);\n  useEffect(function () {\n    if (pass !== passCheck) {\n      setPassError(true);\n    }\n    if (pass == passCheck) {\n      setPassError(false);\n    }\n  }, [form]);\n  var handleClickShowPassword = function handleClickShowPassword() {\n    return setShowPassword(function (show) {\n      return !show;\n    });\n  };\n  var handleMouseDownPassword = function handleMouseDownPassword(event) {\n    event.preventDefault();\n  };\n  var handleChange = useCallback(function (e) {\n    // const { name, value } = e.target; // 비구조화 할당 한 name와 value는 read-only라서 name 또는 value의 값을 바꿀 수 없다.\n    if (e.target.checked) {\n      e.target.value = \"checked\";\n    }\n    setForm(function (prev) {\n      var _e$target, _e$target2;\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.name, (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.value));\n    });\n  }, [form]);\n  var handleSubmit = useCallback(function (e) {\n    e.preventDefault();\n    if (pass !== passCheck) {\n      console.log(\"before fake req\");\n      return setPassError(true);\n    }\n    if (!term) {\n      console.log(\"before fake req\");\n      return setTermError(true);\n    }\n\n    // send req first,\n    dispatch(signUp({\n      email: email,\n      username: username,\n      pass: pass\n    }));\n    console.log(\"fake req\");\n    console.log(email, username, pass);\n    // and then initialize, but do not here\n  }, [form]);\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Signup Page\")), __jsx(AppLayout, null, __jsx(Box, {\n    sx: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(FormControl, {\n    sx: {\n      m: 1,\n      width: \"100%\"\n    },\n    variant: \"outlined\",\n    style: {\n      marginBottom: \"4px\"\n    }\n  }, __jsx(InputLabel, {\n    htmlFor: \"Email\"\n  }, \"Email\"), __jsx(OutlinedInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    id: \"Email\",\n    label: \"Email\"\n  })), __jsx(FormControl, {\n    sx: {\n      m: 1,\n      width: \"100%\"\n    },\n    variant: \"outlined\",\n    style: {\n      marginBottom: \"4px\"\n    }\n  }, __jsx(InputLabel, {\n    htmlFor: \"Username\"\n  }, \"Username\"), __jsx(OutlinedInput, {\n    type: \"text\",\n    name: \"username\",\n    value: username,\n    onChange: handleChange,\n    id: \"Username\",\n    label: \"Username\"\n  })), __jsx(FormControl, {\n    sx: {\n      m: 1,\n      width: \"100%\"\n    },\n    variant: \"outlined\",\n    style: {\n      marginTop: \"4px\"\n    }\n  }, __jsx(InputLabel, {\n    htmlFor: \"Password\"\n  }, \"Password\"), __jsx(OutlinedInput, {\n    type: showPassword ? \"text\" : \"password\",\n    name: \"pass\",\n    value: pass,\n    onChange: handleChange,\n    required: true,\n    id: \"Password\",\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\"\n    }, __jsx(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: handleClickShowPassword,\n      onMouseDown: handleMouseDownPassword,\n      edge: \"end\"\n    }, showPassword ? __jsx(VisibilityOff, null) : __jsx(Visibility, null))),\n    label: \"Password\"\n  })), __jsx(FormControl, {\n    sx: {\n      m: 1,\n      width: \"100%\"\n    },\n    variant: \"outlined\",\n    style: {\n      marginTop: \"4px\"\n    }\n  }, __jsx(InputLabel, {\n    htmlFor: \"Password-Check\"\n  }, \"Password Check\"), __jsx(OutlinedInput, {\n    type: showPassword ? \"text\" : \"password\",\n    name: \"passCheck\",\n    value: passCheck,\n    onChange: handleChange,\n    required: true,\n    id: \"Password-Check\",\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\"\n    }, __jsx(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: handleClickShowPassword,\n      onMouseDown: handleMouseDownPassword,\n      edge: \"end\"\n    }, showPassword ? __jsx(VisibilityOff, null) : __jsx(Visibility, null))),\n    label: \"Password-Check\"\n  })), passError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"), __jsx(Box, {\n    sx: {\n      margin: '0 8px'\n    }\n  }, __jsx(FormControlLabel, {\n    sx: {\n      display: 'block'\n    },\n    control: __jsx(Checkbox, {\n      name: \"term\",\n      value: term,\n      onChange: handleChange\n    }),\n    label: \"\\uC81C\\uB85C\\uCD08 \\uB9D0\\uC744 \\uC798 \\uB4E4\\uC744 \\uAC83\\uC744 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"\n  }), termError && __jsx(Alert, {\n    severity: \"error\"\n  }, \"This is an error alert \\u2014 check it out!\"), __jsx(LoadingButton, {\n    sx: {\n      display: 'block'\n    },\n    type: \"submit\",\n    variant: \"contained\",\n    loading: signUpLoading\n  }, \"Register\"))))));\n};\nexport var __N_SSP = true;\nexport default Signup;","map":null,"metadata":{},"sourceType":"module"}