{"ast":null,"code":"import { all, fork, takeLatest, call, put, delay } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, dummyPost, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\nimport axios from 'axios';\nimport shortId from 'shortid';\nimport { faker } from '@faker-js/faker/locale/en_CA';\nfunction addPostAPI(data) {\n  return axios.post(`/api/post/${data.id}`, data);\n}\nfunction* addPost(action) {\n  // const result = yield call(addPostAPI, action.data);\n  yield delay(1000);\n  try {\n    const id = shortId.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: faker.lorem.paragraphs(2),\n        createdAt: `${faker.date.past(10)}`.substring(0, 24),\n        User: {\n          id: action.data.userId,\n          username: faker.name.fullName()\n        },\n        Images: Array(Math.floor(Math.random() * 4) + 1).fill().map((image, index) => ({\n          src: `${faker.image.cats()}?random=${Date.now()}`,\n          alt: \"cat\"\n        })),\n        Comments: []\n      }\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction removePostAPI(data) {\n  return axios.post(`/api/post/${data.id}`, data);\n}\nfunction* removePost(action) {\n  // const result = yield call(removePostAPI, action.data);\n  yield delay(1000);\n  try {\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment/`, data);\n}\nfunction* addComment(action) {\n  // const result = yield call(addCommentAPI, action.data);\n  yield delay(1000);\n  try {\n    const id = shortId.generate();\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        id,\n        postId: action.data.postId,\n        content: faker.lorem.sentences(2),\n        createdAt: `${faker.date.past(5)}`.substring(0, 24),\n        User: {\n          id: action.data.userId,\n          username: faker.name.fullName()\n        }\n      }\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\nexport default function* userSaga() {\n  yield all([fork(watchAddPost), fork(watchRemovePost), fork(watchAddComment)]);\n}","map":{"version":3,"names":["all","fork","takeLatest","call","put","delay","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","dummyPost","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","axios","shortId","faker","addPostAPI","data","post","id","addPost","action","generate","type","content","lorem","paragraphs","createdAt","date","past","substring","User","userId","username","name","fullName","Images","Array","Math","floor","random","fill","map","image","index","src","cats","Date","now","alt","Comments","err","console","error","response","removePostAPI","removePost","addCommentAPI","postId","addComment","sentences","watchAddPost","watchRemovePost","watchAddComment","userSaga"],"sources":["/Users/home/Desktop/new-projects/client-nextproject/sagas/post.js"],"sourcesContent":["import { all, fork, takeLatest, call, put, delay } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, dummyPost,\n  REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE,\n  ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\nimport axios from 'axios';\nimport shortId from 'shortid';\nimport { faker } from '@faker-js/faker/locale/en_CA';\n\nfunction addPostAPI(data) {\n  return axios.post(`/api/post/${data.id}`, data);\n}\n\nfunction* addPost(action) {\n  // const result = yield call(addPostAPI, action.data);\n  yield delay(1000);\n  try{\n    const id = shortId.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: faker.lorem.paragraphs(2),\n        createdAt: `${faker.date.past(10)}`.substring(0,24),\n        User: {\n          id: action.data.userId,\n          username: faker.name.fullName()\n        },\n        Images: Array(Math.floor(Math.random()*4)+1).fill().map((image, index)=>({\n          src: `${faker.image.cats()}?random=${Date.now()}`,\n          alt: \"cat\"\n        })),\n        Comments: []\n      }\n    })\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id\n    })\n  }\n  catch(err) {\n    console.error(err);\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data,\n    })\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.post(`/api/post/${data.id}`, data);\n}\n\nfunction* removePost(action) {\n  // const result = yield call(removePostAPI, action.data);\n  yield delay(1000);\n  try{\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data\n    })\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    })\n  }\n  catch(err) {\n    console.error(err);\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data,\n    })\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment/`, data);\n}\n\nfunction* addComment(action) {\n  // const result = yield call(addCommentAPI, action.data);\n  yield delay(1000);\n  try{\n    const id = shortId.generate();\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        id,\n        postId: action.data.postId,\n        content: faker.lorem.sentences(2),\n        createdAt: `${faker.date.past(5)}`.substring(0,24),\n        User: {\n          id: action.data.userId,\n          username: faker.name.fullName()\n        },\n      },\n    })\n  }\n  catch(err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data,\n    })\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost)\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost)\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment)\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchAddPost),\n    fork(watchRemovePost),\n    fork(watchAddComment),\n  ])\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}