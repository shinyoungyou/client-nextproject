{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/new-projects/client-nextproject/components/RetweetMenu.tsx\";\nvar __jsx = React.createElement;\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { retweet, undoRetweet } from \"../store/thunks/post\";\nimport React from \"react\";\nimport { StyledMenu } from \"../styles\";\nimport { MenuItem } from \"@mui/material\";\nimport ListItemDecorator from \"@mui/joy/ListItemDecorator\";\nimport PersonAddAltRoundedIcon from \"@mui/icons-material/PersonAddAltRounded\";\nimport FlagIcon from \"@mui/icons-material/Flag\";\nimport { LoadingButton } from \"@mui/lab\";\nconst RetweetMenu = ({\n  post,\n  anchorEl,\n  setAnchorEl,\n  open\n}) => {\n  const {\n    mainPosts,\n    retweetLoading,\n    undoRetweetLoading\n  } = useSelector(state => state.post);\n  const {\n    my\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const isRetweeted = post.RetweetId || mainPosts.find(mainPost => post.id == mainPost.RetweetId);\n  const isOriginalPost = mainPosts.find(mainPost => post.id == mainPost.RetweetId && mainPost.User.id == (my === null || my === void 0 ? void 0 : my.id));\n  const postId = isOriginalPost === null || isOriginalPost === void 0 ? void 0 : isOriginalPost.id; // the id of the post which is retweeting the original one.\n\n  const handleRetweet = post => {\n    if (!my) return alert('로그인이 필요합니다.');\n    if (isRetweeted) {\n      dispatch(undoRetweet({\n        id: isOriginalPost ? postId : post.id\n      }));\n    } else {\n      dispatch(retweet({\n        id: isOriginalPost ? postId : post.id\n      }));\n    }\n  };\n  return __jsx(StyledMenu, {\n    id: \"demo-customized-menu\",\n    MenuListProps: {\n      'aria-labelledby': 'demo-customized-button'\n    },\n    anchorEl: anchorEl,\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(MenuItem, {\n    key: isRetweeted ? \"UndoRetweet\" : \"Retweet\",\n    onClick: () => handleRetweet(post),\n    disableRipple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, __jsx(LoadingButton, {\n    loading: isRetweeted ? undoRetweetLoading : retweetLoading,\n    sx: {\n      p: 0,\n      color: \"inherit\",\n      textTransform: \"inherit\",\n      fontSize: \"inherit\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, __jsx(ListItemDecorator, {\n    sx: {\n      color: 'inherit'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, __jsx(PersonAddAltRoundedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  })), ' ', isRetweeted ? \"UndoRetweet\" : \"Retweet\")), __jsx(MenuItem, {\n    key: \"Quote Tweet\",\n    onClick: handleClose,\n    disableRipple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, __jsx(FlagIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), \"Quote Tweet\"));\n};\nexport default RetweetMenu;","map":{"version":3,"names":["useSelector","useDispatch","retweet","undoRetweet","React","StyledMenu","MenuItem","ListItemDecorator","PersonAddAltRoundedIcon","FlagIcon","LoadingButton","RetweetMenu","post","anchorEl","setAnchorEl","open","mainPosts","retweetLoading","undoRetweetLoading","state","my","user","dispatch","handleClose","isRetweeted","RetweetId","find","mainPost","id","isOriginalPost","User","postId","handleRetweet","alert","p","color","textTransform","fontSize"],"sources":["/Users/home/Desktop/new-projects/client-nextproject/components/RetweetMenu.tsx"],"sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\nimport { retweet, undoRetweet } from \"../store/thunks/post\";\nimport React, { BaseSyntheticEvent, Dispatch } from \"react\";\nimport RootState from \"../store/state-types\";\nimport { Post } from '../store/state-types/post';\n\nimport { StyledMenu } from \"../styles\";\nimport { MenuItem } from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport ListItemDecorator from \"@mui/joy/ListItemDecorator\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport PersonAddAltRoundedIcon from \"@mui/icons-material/PersonAddAltRounded\";\nimport BackspaceIcon from '@mui/icons-material/Backspace';\nimport FlagIcon from \"@mui/icons-material/Flag\";\nimport { LoadingButton } from \"@mui/lab\";\n\ninterface RetweetMenuProps {\n  post: Post;\n  anchorEl: BaseSyntheticEvent[\"currentTarget\"];\n  setAnchorEl: Dispatch<any>;\n  open: boolean;\n}\n\nconst RetweetMenu: React.FC<RetweetMenuProps> = ({ post, anchorEl, setAnchorEl, open }) => {\n  const { mainPosts, retweetLoading, undoRetweetLoading } = useSelector((state: RootState) => state.post);\n  const { my } = useSelector((state: RootState) => state.user);\n\n  const dispatch = useDispatch();\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const isRetweeted = post.RetweetId || mainPosts.find(mainPost => post.id == mainPost.RetweetId);\n  const isOriginalPost = mainPosts.find(mainPost => post.id == mainPost.RetweetId && mainPost.User.id == my?.id);\n  const postId = isOriginalPost?.id; // the id of the post which is retweeting the original one.\n\n  const handleRetweet = (post: Post) => {\n    if(!my) return alert('로그인이 필요합니다.');\n    if(isRetweeted){\n      dispatch(undoRetweet({\n          id: isOriginalPost ? postId : post.id\n      }));\n    } else {\n      dispatch(retweet({\n          id: isOriginalPost ? postId : post.id\n      }));\n    }\n  }\n\n  return (\n      <StyledMenu\n          id=\"demo-customized-menu\"\n          MenuListProps={{\n            'aria-labelledby': 'demo-customized-button',\n          }}\n          anchorEl={anchorEl}\n          open={open}\n          onClose={handleClose}\n      >\n          <MenuItem key={isRetweeted ?\"UndoRetweet\" : \"Retweet\"} onClick={()=>handleRetweet(post)} disableRipple>\n            <LoadingButton loading={isRetweeted ? undoRetweetLoading : retweetLoading} sx={{ p: 0, color: \"inherit\", textTransform: \"inherit\", fontSize: \"inherit\" }}>\n              <ListItemDecorator sx={{color: 'inherit'}}>\n                <PersonAddAltRoundedIcon/>\n              </ListItemDecorator>{' '}\n              {isRetweeted ? \"UndoRetweet\" : \"Retweet\"}\n            </LoadingButton>\n          </MenuItem>\n          <MenuItem key=\"Quote Tweet\" onClick={handleClose} disableRipple>\n            <FlagIcon/>\n            Quote Tweet\n          </MenuItem>\n      </StyledMenu>\n  )\n}\n\nexport default RetweetMenu;"],"mappings":"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"},"metadata":{},"sourceType":"module"}