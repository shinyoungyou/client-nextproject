{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport instance from '.';\nimport { addPostToMe, removePostToMe } from \"../reducers/user\";\nimport { getDummyPosts, postMyDummyPost, postMyDummyComment } from '../reducers/post';\nimport shortId from 'shortid';\nexport const loadPosts = createAsyncThunk('post/loadPosts', async (payload, thunkAPI) => {\n  try {\n    // const response = await instance.post('post/', payload);\n    await pause(1000);\n    // return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n    return thunkAPI.fulfillWithValue(getDummyPosts(10)); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n});\n\nexport const addPost = createAsyncThunk('post/addPost', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.post('post/', payload);\n    const id = shortId.generate();\n    thunkAPI.dispatch(addPostToMe(response.data.id));\n    // return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n    return thunkAPI.fulfillWithValue(postMyDummyPost(payload, id)); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n});\n\nexport const removePost = createAsyncThunk('post/removePost', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.delete(`post/${payload.id}`);\n    thunkAPI.dispatch(removePostToMe(response.data.id));\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n});\n\nexport const addComment = createAsyncThunk('post/addComment', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.post(`post/${payload.postId}/comment/`, payload);\n    const id = shortId.generate();\n    // return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n    return thunkAPI.fulfillWithValue(postMyDummyComment(payload, id)); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n});\n\nexport const removeComment = createAsyncThunk('post/removeComment', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.delete(`post/${payload.postId}/comment/${payload.id}`);\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n});\n\nexport const likePost = createAsyncThunk('post/likePost', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.post(`post/${payload.postId}/like`, payload);\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n});\n\nexport const unlikePost = createAsyncThunk('post/unlikePost', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.delete(`post/${payload.postId}/like/${payload.id}`);\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n});","map":{"version":3,"names":["createAsyncThunk","instance","addPostToMe","removePostToMe","getDummyPosts","postMyDummyPost","postMyDummyComment","shortId","loadPosts","payload","thunkAPI","pause","fulfillWithValue","error","rejectWithValue","response","data","addPost","post","id","generate","dispatch","removePost","delete","addComment","postId","removeComment","likePost","unlikePost"],"sources":["/Users/home/Desktop/new-projects/client-nextproject/store/thunks/post.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport instance from '.';\nimport { addPostToMe, removePostToMe } from \"../reducers/user\";\nimport { getDummyPosts, postMyDummyPost, postMyDummyComment } from '../reducers/post';\n\nimport shortId from 'shortid';\n\nexport const loadPosts = createAsyncThunk('post/loadPosts', async (payload, thunkAPI) => {\n  try {\n    // const response = await instance.post('post/', payload);\n    await pause(1000);\n    // return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n    return thunkAPI.fulfillWithValue(getDummyPosts(10)); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const addPost = createAsyncThunk('post/addPost', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.post('post/', payload);\n    const id = shortId.generate();\n    thunkAPI.dispatch(addPostToMe(response.data.id));\n    // return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n    return thunkAPI.fulfillWithValue(postMyDummyPost(payload, id)); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const removePost = createAsyncThunk('post/removePost', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.delete(`post/${payload.id}`);\n    thunkAPI.dispatch(removePostToMe(response.data.id));\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const addComment = createAsyncThunk('post/addComment', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.post(`post/${payload.postId}/comment/`, payload);\n    const id = shortId.generate();\n    // return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n    return thunkAPI.fulfillWithValue(postMyDummyComment(payload, id)); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const removeComment = createAsyncThunk('post/removeComment', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.delete(`post/${payload.postId}/comment/${payload.id}`);\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const likePost = createAsyncThunk('post/likePost', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.post(`post/${payload.postId}/like`, payload);\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})\n\nexport const unlikePost = createAsyncThunk('post/unlikePost', async (payload, thunkAPI) => {\n  try {\n    const response = await instance.delete(`post/${payload.postId}/like/${payload.id}`);\n    return thunkAPI.fulfillWithValue(response.data); // pass to extraReducer\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data); // pass to extraReducer\n  }\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}