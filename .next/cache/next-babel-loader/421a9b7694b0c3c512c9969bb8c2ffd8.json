{"ast":null,"code":"var __jsx = React.createElement;\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeUsername } from \"../store/thunks/user\";\nimport React, { useState, useEffect } from 'react';\nimport { Box, Input, InputLabel, InputAdornment, FormControl } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nconst UsernameEditForm = () => {\n  const {\n    changeUsernameLoading,\n    changeUsernameDone,\n    changeUsernameError\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const {\n    0: username,\n    1: setUsername\n  } = useState(\"\");\n  useEffect(() => {\n    if (changeUsernameDone) {\n      setUsername(\"\");\n    }\n  }, [changeUsernameDone]);\n  useEffect(() => {\n    if (changeUsernameError) {\n      alert(changeUsernameError);\n    }\n  }, [changeUsernameError]);\n  const handleChange = e => {\n    setUsername(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(changeUsername({\n      username\n    }));\n  };\n  return __jsx(Box, {\n    sx: {\n      '& > :not(style)': {\n        m: 1\n      },\n      width: '100%'\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      display: 'flex'\n    }\n  }, __jsx(FormControl, {\n    variant: \"standard\",\n    sx: {\n      flexGrow: 1\n    }\n  }, __jsx(InputLabel, {\n    htmlFor: \"input-with-icon-adornment\"\n  }, \"Change Username\"), __jsx(Input, {\n    name: \"new-nickname\",\n    value: username,\n    onChange: handleChange,\n    id: \"input-with-icon-adornment\",\n    startAdornment: __jsx(InputAdornment, {\n      position: \"start\"\n    }, __jsx(AccountCircle, null))\n  })), __jsx(Box, {\n    sx: {\n      '& > :not(style)': {\n        m: 1\n      }\n    }\n  }, __jsx(LoadingButton, {\n    type: \"submit\",\n    variant: \"contained\",\n    loading: changeUsernameLoading\n  }, \"Edit\"))));\n};\nexport default UsernameEditForm;","map":null,"metadata":{},"sourceType":"module"}