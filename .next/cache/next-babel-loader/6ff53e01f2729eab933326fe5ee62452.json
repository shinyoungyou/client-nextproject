{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/home/Desktop/new-projects/client-nextproject/pages/index.tsx\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport { useSelector, useDispatch } from 'react-redux';\nimport { loadPosts } from \"../store/thunks/post\";\nimport React, { useState, useEffect } from \"react\";\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nvar Home = function Home() {\n  _s();\n  var _useSelector = useSelector(function (state) {\n      return state.user;\n    }),\n    my = _useSelector.my;\n  var _useSelector2 = useSelector(function (state) {\n      return state.post;\n    }),\n    mainPosts = _useSelector2.mainPosts,\n    loadPostsLoading = _useSelector2.loadPostsLoading,\n    bringMorePosts = _useSelector2.bringMorePosts;\n  var dispatch = useDispatch();\n  var _useState = useState(-1),\n    prevLastId = _useState[0],\n    setPrevLastId = _useState[1];\n\n  // useEffect(()=>{\n  //   if(mainPosts.length < 10){\n  //     dispatch(loadMyInfo());\n  //     dispatch(loadPosts());\n  //   }\n  //   console.log(\"loadPosts\")\n  // }, [])\n\n  useEffect(function () {\n    var handleScroll = function handleScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (!loadPostsLoading && bringMorePosts) {\n          var _mainPosts, _mainPosts3;\n          if (prevLastId != ((_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id)) {\n            var _mainPosts2;\n            dispatch(loadPosts({\n              lastId: (_mainPosts2 = mainPosts[mainPosts.length - 1]) === null || _mainPosts2 === void 0 ? void 0 : _mainPosts2.id\n            }));\n          }\n          setPrevLastId((_mainPosts3 = mainPosts[mainPosts.length - 1]) === null || _mainPosts3 === void 0 ? void 0 : _mainPosts3.id);\n        }\n      }\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    return function () {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [loadPostsLoading, bringMorePosts]);\n  return __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, my && __jsx(PostForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 14\n    }\n  }), mainPosts.map(function (post) {\n    return post.Retweet ? __jsx(PostCard, {\n      post: post.Retweet,\n      retweetingPostId: post.id,\n      key: post.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 46\n      }\n    }) : __jsx(PostCard, {\n      post: post,\n      retweetingPostId: null,\n      key: post.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 122\n      }\n    });\n  }));\n};\n_s(Home, \"7NS+DbWiBMiD7e+5OxVBmyDNX6w=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Home;\nexport var __N_SSP = true;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useSelector","useDispatch","loadPosts","React","useState","useEffect","AppLayout","PostForm","PostCard","Home","state","user","my","post","mainPosts","loadPostsLoading","bringMorePosts","dispatch","prevLastId","setPrevLastId","handleScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","length","id","lastId","addEventListener","removeEventListener","map","Retweet"],"sources":["/Users/home/Desktop/new-projects/client-nextproject/pages/index.tsx"],"sourcesContent":["import wrapper from '../store';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { loadMyInfo } from \"../store/thunks/user\";\nimport { loadPosts } from \"../store/thunks/post\";\nimport React, { useState, useEffect } from \"react\";\nimport type { NextPage } from 'next';\nimport RootState from \"../store/state-types\";\n\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport Link from \"next/link\";\nconst Home: NextPage = () => {\n  const { my } = useSelector((state: RootState)=>state.user);\n  const { mainPosts, loadPostsLoading, bringMorePosts } = useSelector((state: RootState)=>state.post);\n  const dispatch = useDispatch();\n\n  const [prevLastId, setPrevLastId] = useState<number>(-1);\n\n  // useEffect(()=>{\n  //   if(mainPosts.length < 10){\n  //     dispatch(loadMyInfo());\n  //     dispatch(loadPosts());\n  //   }\n  //   console.log(\"loadPosts\")\n  // }, [])\n\n  useEffect(()=>{\n    const handleScroll = () => {\n      if(window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300){\n        if(!loadPostsLoading && bringMorePosts){\n          if(prevLastId != mainPosts[mainPosts.length - 1]?.id){\n            dispatch(loadPosts({\n              lastId: mainPosts[mainPosts.length - 1]?.id\n            }));\n          }\n          setPrevLastId(mainPosts[mainPosts.length - 1]?.id);\n        }\n      }\n    }\n\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    }\n  }, [loadPostsLoading, bringMorePosts])\n\n  return (\n    <AppLayout>\n      {my && <PostForm/>}\n      {mainPosts.map((post)=>(post.Retweet ? <PostCard post={post.Retweet} retweetingPostId={post.id} key={post.id} /> : <PostCard post={post} retweetingPostId={null} key={post.id} />))}\n    </AppLayout>\n  )\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context)=>{\n  await context.store.dispatch(loadMyInfo());\n  await context.store.dispatch(loadPosts());\n  console.log(context);\n})\n\nexport default Home;"],"mappings":";;;;AACA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,SAAS,QAAQ,sBAAsB;AAChD,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAIlD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;AAE7C,IAAMC,IAAc,GAAG,SAAjBA,IAAc,GAAS;EAAA;EAC3B,mBAAeT,WAAW,CAAC,UAACU,KAAgB;MAAA,OAAGA,KAAK,CAACC,IAAI;IAAA,EAAC;IAAlDC,EAAE,gBAAFA,EAAE;EACV,oBAAwDZ,WAAW,CAAC,UAACU,KAAgB;MAAA,OAAGA,KAAK,CAACG,IAAI;IAAA,EAAC;IAA3FC,SAAS,iBAATA,SAAS;IAAEC,gBAAgB,iBAAhBA,gBAAgB;IAAEC,cAAc,iBAAdA,cAAc;EACnD,IAAMC,QAAQ,GAAGhB,WAAW,EAAE;EAE9B,gBAAoCG,QAAQ,CAAS,CAAC,CAAC,CAAC;IAAjDc,UAAU;IAAEC,aAAa;;EAEhC;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAd,SAAS,CAAC,YAAI;IACZ,IAAMe,YAAY,GAAG,SAAfA,YAAY,GAAS;MACzB,IAAGC,MAAM,CAACC,OAAO,GAAGC,QAAQ,CAACC,eAAe,CAACC,YAAY,GAAGF,QAAQ,CAACC,eAAe,CAACE,YAAY,GAAG,GAAG,EAAC;QACtG,IAAG,CAACX,gBAAgB,IAAIC,cAAc,EAAC;UAAA;UACrC,IAAGE,UAAU,mBAAIJ,SAAS,CAACA,SAAS,CAACa,MAAM,GAAG,CAAC,CAAC,+CAA/B,WAAiCC,EAAE,GAAC;YAAA;YACnDX,QAAQ,CAACf,SAAS,CAAC;cACjB2B,MAAM,iBAAEf,SAAS,CAACA,SAAS,CAACa,MAAM,GAAG,CAAC,CAAC,gDAA/B,YAAiCC;YAC3C,CAAC,CAAC,CAAC;UACL;UACAT,aAAa,gBAACL,SAAS,CAACA,SAAS,CAACa,MAAM,GAAG,CAAC,CAAC,gDAA/B,YAAiCC,EAAE,CAAC;QACpD;MACF;IACF,CAAC;IAEDP,MAAM,CAACS,gBAAgB,CAAC,QAAQ,EAAEV,YAAY,CAAC;IAE/C,OAAO,YAAM;MACXC,MAAM,CAACU,mBAAmB,CAAC,QAAQ,EAAEX,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,CAACL,gBAAgB,EAAEC,cAAc,CAAC,CAAC;EAEtC,OACE,MAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACPJ,EAAE,IAAI,MAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,EACjBE,SAAS,CAACkB,GAAG,CAAC,UAACnB,IAAI;IAAA,OAAIA,IAAI,CAACoB,OAAO,GAAG,MAAC,QAAQ;MAAC,IAAI,EAAEpB,IAAI,CAACoB,OAAQ;MAAC,gBAAgB,EAAEpB,IAAI,CAACe,EAAG;MAAC,GAAG,EAAEf,IAAI,CAACe,EAAG;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,GAAG,MAAC,QAAQ;MAAC,IAAI,EAAEf,IAAK;MAAC,gBAAgB,EAAE,IAAK;MAAC,GAAG,EAAEA,IAAI,CAACe,EAAG;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG;EAAA,CAAC,CAAC,CACzK;AAEhB,CAAC;AAAA,GA1CKnB,IAAc;EAAA,QACHT,WAAW,EAC8BA,WAAW,EAClDC,WAAW;AAAA;AAAA,KAHxBQ,IAAc;AAAA;AAkDpB,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module"}