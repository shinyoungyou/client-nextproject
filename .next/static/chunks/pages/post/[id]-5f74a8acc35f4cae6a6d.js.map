{"version":3,"sources":["webpack://_N_E/../../../next-server/lib/amp.ts","webpack://_N_E/./pages/post/.tsx","webpack://_N_E/../../../next-server/lib/head.tsx","webpack://_N_E/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://_N_E/../../../next-server/lib/side-effect.tsx","webpack://_N_E/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://_N_E/../../../next-server/lib/amp-context.ts","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?c31b"],"names":["isInAmpMode","React","useContext","AmpStateContext","ampFirst","hybrid","hasQuery","Post","singlePost","useSelector","state","post","id","useRouter","query","User","username","name","content","property","Images","src","Retweet","posts","retweetingPostId","key","defaultHead","inAmpMode","head","charSet","push","onlyReactElement","list","child","type","Fragment","concat","Children","toArray","props","children","reduce","fragmentList","fragmentChild","METATYPES","reduceComponents","headElements","headElement","headElementChildren","reverse","filter","keys","Set","tags","metaTypes","metaCategories","h","isUnique","indexOf","slice","has","add","i","len","length","metatype","hasOwnProperty","category","categories","unique","map","c","cloneElement","Head","ampState","headManager","HeadManagerContext","reduceComponentsToState","rewind","module","exports","TypeError","iter","Symbol","iterator","Object","Array","from","arrayLikeToArray","arr","isArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","constructor","_hasHeadManager","emitChange","updateHead","mountedInstances","componentDidMount","this","componentDidUpdate","componentWillUnmount","render","Component","obj","value","defineProperty","enumerable","configurable","writable","createContext","window","__NEXT_P"],"mappings":"oJAWO,WAEL,OAAOA,EAAYC,UAAMC,WAAWC,qBAbtC,I,EAAA,G,EAAA,Y,2BACA,YAEO,SAASH,IAIC,6DAAb,GAJG,IACLI,gBAAQ,IAAG,GADe,MAE1BC,cAAM,IAAG,GAFiB,MAG1BC,gBAAQ,IAAG,GAHe,EAK1B,OAAOF,GAAaC,GAAUC,I,iMC2B/B,KAccC,UApCQ,WACrB,IAAQC,EAAeC,aAAY,SAACC,GAAgB,OAAGA,EAAMC,QAArDH,WAEAI,EADOC,sBACOC,MAAdF,GAER,OACI,EAAC,IAAS,KACPJ,GAAc,EAAC,IAAI,KAClB,eACGA,EAAWO,KAAKC,SAAQ,uBAG3B,UAAMC,KAAK,cAAcC,QAASV,EAAWU,UAC7C,UAAMC,SAAS,WAAWD,QAAO,UAAKV,EAAWO,KAAKC,SAAQ,qCAC9D,UAAMG,SAAS,iBAAiBD,QAASV,EAAWU,UACpD,UAAMC,SAAS,WACTD,QAASV,EAAWY,OAAO,GAAKZ,EAAWY,OAAO,GAAGC,IAAM,qCACjE,UAAMF,SAAS,SAASD,QAAO,oCAA+BN,MAE/DJ,IAAeA,EAAWc,QAAU,EAAC,IAAQ,CAACX,KAAMH,EAAWc,QAASC,MAAO,CAACf,GAAagB,iBAAkBhB,EAAWI,GAAIa,IAAKjB,EAAWI,KAAS,EAAC,IAAQ,CAACD,KAAMH,EAAYe,MAAO,CAACf,GAAagB,iBAAkB,W,+FChCnO,I,EAAA,E,waAAA,YACA,G,EAAA,Y,2BACA,YACA,YACA,Y,0GAMO,SAASE,IAA8C,IAAlCC,EAAY,UAAH,8CAC7BC,EAAO,CAAC,gCAAMC,QAAQ,WAI5B,OAHKF,GACHC,EAAKE,KAAK,gCAAMb,KAAK,WAAWC,QAAQ,wBAEnCU,EAGT,SAASG,EACPC,EACAC,GAGA,MAAqB,kBAAVA,GAAuC,kBAAVA,EAC/BD,EAGLC,EAAMC,OAASjC,UAAMkC,SAChBH,EAAKI,OACVnC,UAAMoC,SAASC,QAAQL,EAAMM,MAAMC,UAAUC,QAC3C,SACEC,EACAC,GAEA,MAC2B,kBAAlBA,GACkB,kBAAlBA,EAEAD,EAEFA,EAAaN,OAAOO,KAE7B,KAICX,EAAKI,OAAOH,GAGrB,IAAMW,EAAY,CAAC,OAAQ,YAAa,UAAW,YAoEnD,SAASC,EACPC,EACAP,GAEA,OAAOO,EACJL,QACC,SAACT,EAA0Be,GACzB,IAAMC,EAAsB/C,UAAMoC,SAASC,QACzCS,EAAYR,MAAMC,UAEpB,OAAOR,EAAKI,OAAOY,KAErB,IAEDP,OAAOV,EAAkB,IACzBkB,UACAb,OAAOV,EAAYa,EAAMZ,YACzBuB,OA9EL,WACE,IAAMC,EAAO,IAAIC,IACXC,EAAO,IAAID,IACXE,EAAY,IAAIF,IAChBG,EAAsD,GAE5D,OAAQC,YACN,IAAIC,GAAW,EAEf,GAAID,EAAE/B,KAAwB,kBAAV+B,EAAE/B,KAAoB+B,EAAE/B,IAAIiC,QAAQ,KAAO,EAAG,CAChE,IAAMjC,EAAM+B,EAAE/B,IAAIkC,MAAMH,EAAE/B,IAAIiC,QAAQ,KAAO,GACzCP,EAAKS,IAAInC,GACXgC,GAAW,EAEXN,EAAKU,IAAIpC,GAKb,OAAQ+B,EAAEtB,MACR,IAAK,QACL,IAAK,OACCmB,EAAKO,IAAIJ,EAAEtB,MACbuB,GAAW,EAEXJ,EAAKQ,IAAIL,EAAEtB,MAEb,MACF,IAAK,OACH,IAAK,IAAI4B,EAAI,EAAGC,EAAMnB,EAAUoB,OAAQF,EAAIC,EAAKD,IAAK,CACpD,IAAMG,EAAWrB,EAAUkB,GAC3B,GAAKN,EAAEjB,MAAM2B,eAAeD,GAE5B,GAAiB,YAAbA,EACEX,EAAUM,IAAIK,GAChBR,GAAW,EAEXH,EAAUO,IAAII,OAEX,CACL,IAAME,EAAWX,EAAEjB,MAAM0B,GACnBG,EAAab,EAAeU,IAAa,IAAIb,IAC/CgB,EAAWR,IAAIO,GACjBV,GAAW,GAEXW,EAAWP,IAAIM,GACfZ,EAAeU,GAAYG,KAOrC,OAAOX,GAyBCY,IACPpB,UACAqB,KAAI,SAACC,EAA4BT,GAChC,IAAMrC,EAAM8C,EAAE9C,KAAOqC,EAgBrB,OAAO7D,UAAMuE,aAAaD,EAAG,CAAE9C,WAQrC,SAASgD,EAAT,GAA2D,IAA3CjC,EAAhB,EAAgBA,SACRkC,GAAW,IAAAxE,YAAWC,mBACtBwE,GAAc,IAAAzE,YAAW0E,sBAC/B,OACE,wBAAC,UAAD,CACEC,wBAAyBhC,EACzB8B,YAAaA,EACbhD,WAAW,IAAA3B,aAAY0E,IAEtBlC,GAMPiC,EAAKK,OAAS,a,MAECL,E,gCC9KfM,EAAOC,QAJP,WACE,MAAM,IAAIC,UAAU,0I,mBCGtBF,EAAOC,QAJP,SAA0BE,GACxB,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOI,MAAMC,KAAKL,K,qBCD1F,IAAIM,EAAmB,EAAQ,QAM/BT,EAAOC,QAJP,SAA4BS,GAC1B,GAAIH,MAAMI,QAAQD,GAAM,OAAOD,EAAiBC,K,qBCHlD,IAAIE,EAAoB,EAAQ,QAE5BC,EAAkB,EAAQ,QAE1BC,EAA6B,EAAQ,QAErCC,EAAoB,EAAQ,QAMhCf,EAAOC,QAJP,SAA4BS,GAC1B,OAAOE,EAAkBF,IAAQG,EAAgBH,IAAQI,EAA2BJ,IAAQK,M,okBCT9F,gBAgBe,gCAcbC,WAAYxD,GAAY,MASvB,OATuB,WACtB,cAAMA,IAdAyD,qBAagB,IAXxBC,WAAa,WACP,EAAKD,iBACP,EAAKzD,MAAMoC,YAAYuB,WACrB,EAAK3D,MAAMsC,wBAAX,EACM,EAAKtC,MAAMoC,YAAYwB,kBAC3B,EAAK5D,SAQX,EAAKyD,gBACH,EAAKzD,MAAMoC,aAAe,EAAKpC,MAAMoC,YAAYwB,iBAMpD,EAvBqD,OAwBtDC,+CACMC,KAAKL,iBACPK,KAAK9D,MAAMoC,YAAYwB,iBAAiBtC,IAAIwC,MAE9CA,KAAKJ,eAEPK,2CACED,KAAKJ,eAEPM,6CACMF,KAAKL,iBACPK,KAAK9D,MAAMoC,YAAYwB,iBAAvB,OAA+CE,MAEjDA,KAAKJ,eAGPO,+BACE,OAAO,SAzC6C,EAAzC,CAAcC,a,gCCD7B1B,EAAOC,QAfP,SAAyB0B,EAAKjF,EAAKkF,GAYjC,OAXIlF,KAAOiF,EACTrB,OAAOuB,eAAeF,EAAKjF,EAAK,CAC9BkF,MAAOA,EACPE,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZL,EAAIjF,GAAOkF,EAGND,I,kCCZT,I,2CAEO,IAAMvG,I,EAFb,Y,4BAEmDF,QAAM+G,cAAc,I,2CCDlEC,OAAOC,SAAWD,OAAOC,UAAY,IAAIpF,KAAK,CAC7C,aACA,WACE,OAAO,EAAQ,a","file":"static/chunks/pages/post/[id]-5f74a8acc35f4cae6a6d.js","sourcesContent":["import React from 'react'\nimport { AmpStateContext } from './amp-context'\n\nexport function isInAmpMode({\n  ampFirst = false,\n  hybrid = false,\n  hasQuery = false,\n} = {}): boolean {\n  return ampFirst || (hybrid && hasQuery)\n}\n\nexport function useAmp(): boolean {\n  // Don't assign the context value to a variable to save bytes\n  return isInAmpMode(React.useContext(AmpStateContext))\n}\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport wrapper from \"../../store\";\nimport { loadMyInfo } from \"../../store/thunks/user\";\nimport { loadSinglePost } from \"../../store/thunks/post\";\nimport type { NextPage } from 'next';\nimport RootState from \"../../store/state-types\";\nimport axios from \"axios\";\nimport Head from 'next/head';\n\nimport AppLayout from \"../../components/AppLayout\";\nimport PostCard from \"../../components/PostCard\";\nimport React from \"react\";\nconst Post: NextPage = () => {\n  const { singlePost } = useSelector((state: RootState)=>state.post);\n  const router = useRouter();\n  const { id } = router.query;\n\n  return (\n      <AppLayout>\n        {singlePost && <Head>\n          <title>\n            {singlePost.User.username}\n            님의 글\n          </title>\n          <meta name=\"description\" content={singlePost.content}/>\n          <meta property=\"og:title\" content={`${singlePost.User.username}님의 게시글`}/>\n          <meta property=\"og:description\" content={singlePost.content}/>\n          <meta property=\"og:image\"\n                content={singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebird.com/favicon.ico'}/>\n          <meta property=\"og:url\" content={`https://nodebird.com/post/${id}`}/>\n        </Head>}\n        {singlePost && (singlePost.Retweet ? <PostCard post={singlePost.Retweet} posts={[singlePost]} retweetingPostId={singlePost.id} key={singlePost.id} /> : <PostCard post={singlePost} posts={[singlePost]} retweetingPostId={null} />)}\n      </AppLayout>\n  )\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context)=>{\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n  if (cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  await context.store.dispatch(loadMyInfo());\n  await context.store.dispatch(loadSinglePost({ id: parseInt(context.params?.id as string) }));\n\n  console.log(context.req);\n})\n\nexport default Post;","import React, { useContext } from 'react'\nimport Effect from './side-effect'\nimport { AmpStateContext } from './amp-context'\nimport { HeadManagerContext } from './head-manager-context'\nimport { isInAmpMode } from './amp'\n\ntype WithInAmpMode = {\n  inAmpMode?: boolean\n}\n\nexport function defaultHead(inAmpMode = false): JSX.Element[] {\n  const head = [<meta charSet=\"utf-8\" />]\n  if (!inAmpMode) {\n    head.push(<meta name=\"viewport\" content=\"width=device-width\" />)\n  }\n  return head\n}\n\nfunction onlyReactElement(\n  list: Array<React.ReactElement<any>>,\n  child: React.ReactChild\n): Array<React.ReactElement<any>> {\n  // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n  if (typeof child === 'string' || typeof child === 'number') {\n    return list\n  }\n  // Adds support for React.Fragment\n  if (child.type === React.Fragment) {\n    return list.concat(\n      React.Children.toArray(child.props.children).reduce(\n        (\n          fragmentList: Array<React.ReactElement<any>>,\n          fragmentChild: React.ReactChild\n        ): Array<React.ReactElement<any>> => {\n          if (\n            typeof fragmentChild === 'string' ||\n            typeof fragmentChild === 'number'\n          ) {\n            return fragmentList\n          }\n          return fragmentList.concat(fragmentChild)\n        },\n        []\n      )\n    )\n  }\n  return list.concat(child)\n}\n\nconst METATYPES = ['name', 'httpEquiv', 'charSet', 'itemProp']\n\n/*\n returns a function for filtering head child elements\n which shouldn't be duplicated, like <title/>\n Also adds support for deduplicated `key` properties\n*/\nfunction unique() {\n  const keys = new Set()\n  const tags = new Set()\n  const metaTypes = new Set()\n  const metaCategories: { [metatype: string]: Set<string> } = {}\n\n  return (h: React.ReactElement<any>) => {\n    let isUnique = true\n\n    if (h.key && typeof h.key !== 'number' && h.key.indexOf('$') > 0) {\n      const key = h.key.slice(h.key.indexOf('$') + 1)\n      if (keys.has(key)) {\n        isUnique = false\n      } else {\n        keys.add(key)\n      }\n    }\n\n    // eslint-disable-next-line default-case\n    switch (h.type) {\n      case 'title':\n      case 'base':\n        if (tags.has(h.type)) {\n          isUnique = false\n        } else {\n          tags.add(h.type)\n        }\n        break\n      case 'meta':\n        for (let i = 0, len = METATYPES.length; i < len; i++) {\n          const metatype = METATYPES[i]\n          if (!h.props.hasOwnProperty(metatype)) continue\n\n          if (metatype === 'charSet') {\n            if (metaTypes.has(metatype)) {\n              isUnique = false\n            } else {\n              metaTypes.add(metatype)\n            }\n          } else {\n            const category = h.props[metatype]\n            const categories = metaCategories[metatype] || new Set()\n            if (categories.has(category)) {\n              isUnique = false\n            } else {\n              categories.add(category)\n              metaCategories[metatype] = categories\n            }\n          }\n        }\n        break\n    }\n\n    return isUnique\n  }\n}\n\n/**\n *\n * @param headElements List of multiple <Head> instances\n */\nfunction reduceComponents(\n  headElements: Array<React.ReactElement<any>>,\n  props: WithInAmpMode\n) {\n  return headElements\n    .reduce(\n      (list: React.ReactChild[], headElement: React.ReactElement<any>) => {\n        const headElementChildren = React.Children.toArray(\n          headElement.props.children\n        )\n        return list.concat(headElementChildren)\n      },\n      []\n    )\n    .reduce(onlyReactElement, [])\n    .reverse()\n    .concat(defaultHead(props.inAmpMode))\n    .filter(unique())\n    .reverse()\n    .map((c: React.ReactElement<any>, i: number) => {\n      const key = c.key || i\n      if (process.env.__NEXT_OPTIMIZE_FONTS && !props.inAmpMode) {\n        if (\n          c.type === 'link' &&\n          c.props['href'] &&\n          // TODO(prateekbh@): Replace this with const from `constants` when the tree shaking works.\n          ['https://fonts.googleapis.com/css'].some((url) =>\n            c.props['href'].startsWith(url)\n          )\n        ) {\n          const newProps = { ...(c.props || {}) }\n          newProps['data-href'] = newProps['href']\n          newProps['href'] = undefined\n          return React.cloneElement(c, newProps)\n        }\n      }\n      return React.cloneElement(c, { key })\n    })\n}\n\n/**\n * This component injects elements to `<head>` of your page.\n * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n */\nfunction Head({ children }: { children: React.ReactNode }) {\n  const ampState = useContext(AmpStateContext)\n  const headManager = useContext(HeadManagerContext)\n  return (\n    <Effect\n      reduceComponentsToState={reduceComponents}\n      headManager={headManager}\n      inAmpMode={isInAmpMode(ampState)}\n    >\n      {children}\n    </Effect>\n  )\n}\n\n// TODO: Remove in the next major release\nHead.rewind = () => {}\n\nexport default Head\n","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","import React, { Component } from 'react'\n\nconst isServer = typeof window === 'undefined'\n\ntype State = JSX.Element[] | undefined\n\ntype SideEffectProps = {\n  reduceComponentsToState: <T>(\n    components: Array<React.ReactElement<any>>,\n    props: T\n  ) => State\n  handleStateChange?: (state: State) => void\n  headManager: any\n  inAmpMode?: boolean\n}\n\nexport default class extends Component<SideEffectProps> {\n  private _hasHeadManager: boolean\n\n  emitChange = (): void => {\n    if (this._hasHeadManager) {\n      this.props.headManager.updateHead(\n        this.props.reduceComponentsToState(\n          [...this.props.headManager.mountedInstances],\n          this.props\n        )\n      )\n    }\n  }\n\n  constructor(props: any) {\n    super(props)\n    this._hasHeadManager =\n      this.props.headManager && this.props.headManager.mountedInstances\n\n    if (isServer && this._hasHeadManager) {\n      this.props.headManager.mountedInstances.add(this)\n      this.emitChange()\n    }\n  }\n  componentDidMount() {\n    if (this._hasHeadManager) {\n      this.props.headManager.mountedInstances.add(this)\n    }\n    this.emitChange()\n  }\n  componentDidUpdate() {\n    this.emitChange()\n  }\n  componentWillUnmount() {\n    if (this._hasHeadManager) {\n      this.props.headManager.mountedInstances.delete(this)\n    }\n    this.emitChange()\n  }\n\n  render() {\n    return null\n  }\n}\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import React from 'react'\n\nexport const AmpStateContext: React.Context<any> = React.createContext({})\n\nif (process.env.NODE_ENV !== 'production') {\n  AmpStateContext.displayName = 'AmpStateContext'\n}\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/post/[id]\",\n      function () {\n        return require(\"private-next-pages/post/[id].tsx\");\n      }\n    ]);\n  "],"sourceRoot":""}