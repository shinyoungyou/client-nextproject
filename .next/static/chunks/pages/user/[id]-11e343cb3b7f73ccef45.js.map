{"version":3,"sources":["webpack://_N_E/../../../next-server/lib/amp.ts","webpack://_N_E/../../../next-server/lib/head.tsx","webpack://_N_E/./pages/user/.tsx","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?07bc","webpack://_N_E/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://_N_E/../../../next-server/lib/side-effect.tsx","webpack://_N_E/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://_N_E/../../../next-server/lib/amp-context.ts"],"names":["isInAmpMode","React","useContext","AmpStateContext","ampFirst","hybrid","hasQuery","defaultHead","inAmpMode","head","charSet","push","name","content","onlyReactElement","list","child","type","Fragment","concat","Children","toArray","props","children","reduce","fragmentList","fragmentChild","METATYPES","reduceComponents","headElements","headElement","headElementChildren","reverse","filter","keys","Set","tags","metaTypes","metaCategories","h","isUnique","key","indexOf","slice","has","add","i","len","length","metatype","hasOwnProperty","category","categories","unique","map","c","cloneElement","Head","ampState","headManager","HeadManagerContext","reduceComponentsToState","rewind","Post","useSelector","state","user","singleUser","my","post","postsByUser","loadPostsByUserLoading","bringMorePostsByUser","dispatch","useDispatch","id","useRouter","query","useState","prevLastId","setPrevLastId","useEffect","handleScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","loadPostsByUser","parseInt","lastId","addEventListener","removeEventListener","username","property","maxWidth","Retweet","posts","retweetingPostId","__NEXT_P","module","exports","TypeError","iter","Symbol","iterator","Object","Array","from","arrayLikeToArray","arr","isArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","constructor","_hasHeadManager","emitChange","updateHead","mountedInstances","componentDidMount","this","componentDidUpdate","componentWillUnmount","render","Component","obj","value","defineProperty","enumerable","configurable","writable","createContext"],"mappings":"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","file":"static/chunks/pages/user/[id]-11e343cb3b7f73ccef45.js","sourcesContent":["import React from 'react'\nimport { AmpStateContext } from './amp-context'\n\nexport function isInAmpMode({\n  ampFirst = false,\n  hybrid = false,\n  hasQuery = false,\n} = {}): boolean {\n  return ampFirst || (hybrid && hasQuery)\n}\n\nexport function useAmp(): boolean {\n  // Don't assign the context value to a variable to save bytes\n  return isInAmpMode(React.useContext(AmpStateContext))\n}\n","import React, { useContext } from 'react'\nimport Effect from './side-effect'\nimport { AmpStateContext } from './amp-context'\nimport { HeadManagerContext } from './head-manager-context'\nimport { isInAmpMode } from './amp'\n\ntype WithInAmpMode = {\n  inAmpMode?: boolean\n}\n\nexport function defaultHead(inAmpMode = false): JSX.Element[] {\n  const head = [<meta charSet=\"utf-8\" />]\n  if (!inAmpMode) {\n    head.push(<meta name=\"viewport\" content=\"width=device-width\" />)\n  }\n  return head\n}\n\nfunction onlyReactElement(\n  list: Array<React.ReactElement<any>>,\n  child: React.ReactChild\n): Array<React.ReactElement<any>> {\n  // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n  if (typeof child === 'string' || typeof child === 'number') {\n    return list\n  }\n  // Adds support for React.Fragment\n  if (child.type === React.Fragment) {\n    return list.concat(\n      React.Children.toArray(child.props.children).reduce(\n        (\n          fragmentList: Array<React.ReactElement<any>>,\n          fragmentChild: React.ReactChild\n        ): Array<React.ReactElement<any>> => {\n          if (\n            typeof fragmentChild === 'string' ||\n            typeof fragmentChild === 'number'\n          ) {\n            return fragmentList\n          }\n          return fragmentList.concat(fragmentChild)\n        },\n        []\n      )\n    )\n  }\n  return list.concat(child)\n}\n\nconst METATYPES = ['name', 'httpEquiv', 'charSet', 'itemProp']\n\n/*\n returns a function for filtering head child elements\n which shouldn't be duplicated, like <title/>\n Also adds support for deduplicated `key` properties\n*/\nfunction unique() {\n  const keys = new Set()\n  const tags = new Set()\n  const metaTypes = new Set()\n  const metaCategories: { [metatype: string]: Set<string> } = {}\n\n  return (h: React.ReactElement<any>) => {\n    let isUnique = true\n\n    if (h.key && typeof h.key !== 'number' && h.key.indexOf('$') > 0) {\n      const key = h.key.slice(h.key.indexOf('$') + 1)\n      if (keys.has(key)) {\n        isUnique = false\n      } else {\n        keys.add(key)\n      }\n    }\n\n    // eslint-disable-next-line default-case\n    switch (h.type) {\n      case 'title':\n      case 'base':\n        if (tags.has(h.type)) {\n          isUnique = false\n        } else {\n          tags.add(h.type)\n        }\n        break\n      case 'meta':\n        for (let i = 0, len = METATYPES.length; i < len; i++) {\n          const metatype = METATYPES[i]\n          if (!h.props.hasOwnProperty(metatype)) continue\n\n          if (metatype === 'charSet') {\n            if (metaTypes.has(metatype)) {\n              isUnique = false\n            } else {\n              metaTypes.add(metatype)\n            }\n          } else {\n            const category = h.props[metatype]\n            const categories = metaCategories[metatype] || new Set()\n            if (categories.has(category)) {\n              isUnique = false\n            } else {\n              categories.add(category)\n              metaCategories[metatype] = categories\n            }\n          }\n        }\n        break\n    }\n\n    return isUnique\n  }\n}\n\n/**\n *\n * @param headElements List of multiple <Head> instances\n */\nfunction reduceComponents(\n  headElements: Array<React.ReactElement<any>>,\n  props: WithInAmpMode\n) {\n  return headElements\n    .reduce(\n      (list: React.ReactChild[], headElement: React.ReactElement<any>) => {\n        const headElementChildren = React.Children.toArray(\n          headElement.props.children\n        )\n        return list.concat(headElementChildren)\n      },\n      []\n    )\n    .reduce(onlyReactElement, [])\n    .reverse()\n    .concat(defaultHead(props.inAmpMode))\n    .filter(unique())\n    .reverse()\n    .map((c: React.ReactElement<any>, i: number) => {\n      const key = c.key || i\n      if (process.env.__NEXT_OPTIMIZE_FONTS && !props.inAmpMode) {\n        if (\n          c.type === 'link' &&\n          c.props['href'] &&\n          // TODO(prateekbh@): Replace this with const from `constants` when the tree shaking works.\n          ['https://fonts.googleapis.com/css'].some((url) =>\n            c.props['href'].startsWith(url)\n          )\n        ) {\n          const newProps = { ...(c.props || {}) }\n          newProps['data-href'] = newProps['href']\n          newProps['href'] = undefined\n          return React.cloneElement(c, newProps)\n        }\n      }\n      return React.cloneElement(c, { key })\n    })\n}\n\n/**\n * This component injects elements to `<head>` of your page.\n * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n */\nfunction Head({ children }: { children: React.ReactNode }) {\n  const ampState = useContext(AmpStateContext)\n  const headManager = useContext(HeadManagerContext)\n  return (\n    <Effect\n      reduceComponentsToState={reduceComponents}\n      headManager={headManager}\n      inAmpMode={isInAmpMode(ampState)}\n    >\n      {children}\n    </Effect>\n  )\n}\n\n// TODO: Remove in the next major release\nHead.rewind = () => {}\n\nexport default Head\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport wrapper from \"../../store\";\nimport { loadMyInfo, loadSingleUser } from \"../../store/thunks/user\";\nimport { loadPostsByUser } from \"../../store/thunks/post\";\nimport React, { useState, useEffect } from \"react\";\nimport type { NextPage } from 'next';\nimport RootState from \"../../store/state-types\";\nimport axios from \"axios\";\nimport Head from 'next/head';\n\nimport AppLayout from \"../../components/AppLayout\";\nimport PostCard from \"../../components/PostCard\";\nimport UserProfile from \"../../components/UserProfile\";\n\nconst Post: NextPage = () => {\n  const { singleUser, my } = useSelector((state: RootState)=>state.user);\n  const { postsByUser, loadPostsByUserLoading, bringMorePostsByUser } = useSelector((state: RootState)=>state.post);\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const { id } = router.query;\n\n  const [prevLastId, setPrevLastId] = useState<number>(-1);\n\n  useEffect(()=>{\n    const handleScroll = () => {\n      if(window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300){\n        if(!loadPostsByUserLoading && bringMorePostsByUser){\n          if(id != null &&  postsByUser != null && prevLastId != postsByUser[postsByUser.length - 1]?.id){\n            dispatch(loadPostsByUser({\n              id: parseInt(id as string),\n              lastId: postsByUser[postsByUser.length - 1].id\n            }));\n            setPrevLastId(postsByUser[postsByUser.length - 1]?.id);\n          }\n        }\n      }\n    }\n\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    }\n  }, [loadPostsByUserLoading, bringMorePostsByUser])\n\n  return (\n      <AppLayout>\n        {singleUser && (\n            <Head>\n              <title>\n                {singleUser.username}\n                님의 글\n              </title>\n              <meta name=\"description\" content={`${singleUser.username}님의 게시글`} />\n              <meta property=\"og:title\" content={`${singleUser.username}님의 게시글`} />\n              <meta property=\"og:description\" content={`${singleUser.username}님의 게시글`} />\n              <meta property=\"og:image\" content=\"https://nodebird.com/favicon.ico\" />\n              <meta property=\"og:url\" content={`https://nodebird.com/user/${id}`} />\n            </Head>\n        )}\n        {singleUser && singleUser.id != my?.id\n            ? <UserProfile user={singleUser} maxWidth={660} />\n            : null}\n        {postsByUser?.map((post)=>(post.Retweet ? <PostCard post={post.Retweet} posts={postsByUser} retweetingPostId={post.id} key={post.id} /> : <PostCard post={post} posts={postsByUser} retweetingPostId={null} key={post.id} />))}\n      </AppLayout>\n  )\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context)=>{\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n  if (cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  await context.store.dispatch(loadMyInfo());\n  if (context.params != null) {\n    await context.store.dispatch(loadSingleUser({ id: parseInt(context.params.id as string) }));\n    await context.store.dispatch(loadPostsByUser({ id: parseInt(context.params.id as string) }));\n  }\n  // console.log(context.req);\n})\n\nexport default Post;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/user/[id]\",\n      function () {\n        return require(\"private-next-pages/user/[id].tsx\");\n      }\n    ]);\n  ","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","import React, { Component } from 'react'\n\nconst isServer = typeof window === 'undefined'\n\ntype State = JSX.Element[] | undefined\n\ntype SideEffectProps = {\n  reduceComponentsToState: <T>(\n    components: Array<React.ReactElement<any>>,\n    props: T\n  ) => State\n  handleStateChange?: (state: State) => void\n  headManager: any\n  inAmpMode?: boolean\n}\n\nexport default class extends Component<SideEffectProps> {\n  private _hasHeadManager: boolean\n\n  emitChange = (): void => {\n    if (this._hasHeadManager) {\n      this.props.headManager.updateHead(\n        this.props.reduceComponentsToState(\n          [...this.props.headManager.mountedInstances],\n          this.props\n        )\n      )\n    }\n  }\n\n  constructor(props: any) {\n    super(props)\n    this._hasHeadManager =\n      this.props.headManager && this.props.headManager.mountedInstances\n\n    if (isServer && this._hasHeadManager) {\n      this.props.headManager.mountedInstances.add(this)\n      this.emitChange()\n    }\n  }\n  componentDidMount() {\n    if (this._hasHeadManager) {\n      this.props.headManager.mountedInstances.add(this)\n    }\n    this.emitChange()\n  }\n  componentDidUpdate() {\n    this.emitChange()\n  }\n  componentWillUnmount() {\n    if (this._hasHeadManager) {\n      this.props.headManager.mountedInstances.delete(this)\n    }\n    this.emitChange()\n  }\n\n  render() {\n    return null\n  }\n}\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import React from 'react'\n\nexport const AmpStateContext: React.Context<any> = React.createContext({})\n\nif (process.env.NODE_ENV !== 'production') {\n  AmpStateContext.displayName = 'AmpStateContext'\n}\n"],"sourceRoot":""}